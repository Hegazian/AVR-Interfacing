
7_segment.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001a34  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  00001a34  00001aa8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00000f54  00000000  00000000  00001bb0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000905  00000000  00000000  00002b04  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000180  00000000  00000000  00003409  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001d3  00000000  00000000  00003589  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000200f  00000000  00000000  0000375c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001170  00000000  00000000  0000576b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001001  00000000  00000000  000068db  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  000078dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002c1  00000000  00000000  00007a7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008ae  00000000  00000000  00007d3d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  000085eb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e3       	ldi	r30, 0x34	; 52
      68:	fa e1       	ldi	r31, 0x1A	; 26
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <main>
      7a:	0c 94 18 0d 	jmp	0x1a30	; 0x1a30 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 e1 0c 	jmp	0x19c2	; 0x19c2 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 fd 0c 	jmp	0x19fa	; 0x19fa <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 ed 0c 	jmp	0x19da	; 0x19da <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 09 0d 	jmp	0x1a12	; 0x1a12 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 ed 0c 	jmp	0x19da	; 0x19da <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 09 0d 	jmp	0x1a12	; 0x1a12 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 e1 0c 	jmp	0x19c2	; 0x19c2 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 fd 0c 	jmp	0x19fa	; 0x19fa <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 ed 0c 	jmp	0x19da	; 0x19da <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 09 0d 	jmp	0x1a12	; 0x1a12 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 ed 0c 	jmp	0x19da	; 0x19da <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 09 0d 	jmp	0x1a12	; 0x1a12 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 ed 0c 	jmp	0x19da	; 0x19da <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 09 0d 	jmp	0x1a12	; 0x1a12 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 f1 0c 	jmp	0x19e2	; 0x19e2 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 0d 0d 	jmp	0x1a1a	; 0x1a1a <__epilogue_restores__+0x20>

000007ea <__floatunsisf>:
     7ea:	a8 e0       	ldi	r26, 0x08	; 8
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 e9 0c 	jmp	0x19d2	; 0x19d2 <__prologue_saves__+0x10>
     7f6:	7b 01       	movw	r14, r22
     7f8:	8c 01       	movw	r16, r24
     7fa:	61 15       	cp	r22, r1
     7fc:	71 05       	cpc	r23, r1
     7fe:	81 05       	cpc	r24, r1
     800:	91 05       	cpc	r25, r1
     802:	19 f4       	brne	.+6      	; 0x80a <__floatunsisf+0x20>
     804:	82 e0       	ldi	r24, 0x02	; 2
     806:	89 83       	std	Y+1, r24	; 0x01
     808:	60 c0       	rjmp	.+192    	; 0x8ca <__stack+0x6b>
     80a:	83 e0       	ldi	r24, 0x03	; 3
     80c:	89 83       	std	Y+1, r24	; 0x01
     80e:	8e e1       	ldi	r24, 0x1E	; 30
     810:	c8 2e       	mov	r12, r24
     812:	d1 2c       	mov	r13, r1
     814:	dc 82       	std	Y+4, r13	; 0x04
     816:	cb 82       	std	Y+3, r12	; 0x03
     818:	ed 82       	std	Y+5, r14	; 0x05
     81a:	fe 82       	std	Y+6, r15	; 0x06
     81c:	0f 83       	std	Y+7, r16	; 0x07
     81e:	18 87       	std	Y+8, r17	; 0x08
     820:	c8 01       	movw	r24, r16
     822:	b7 01       	movw	r22, r14
     824:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__clzsi2>
     828:	fc 01       	movw	r30, r24
     82a:	31 97       	sbiw	r30, 0x01	; 1
     82c:	f7 ff       	sbrs	r31, 7
     82e:	3b c0       	rjmp	.+118    	; 0x8a6 <__stack+0x47>
     830:	22 27       	eor	r18, r18
     832:	33 27       	eor	r19, r19
     834:	2e 1b       	sub	r18, r30
     836:	3f 0b       	sbc	r19, r31
     838:	57 01       	movw	r10, r14
     83a:	68 01       	movw	r12, r16
     83c:	02 2e       	mov	r0, r18
     83e:	04 c0       	rjmp	.+8      	; 0x848 <__floatunsisf+0x5e>
     840:	d6 94       	lsr	r13
     842:	c7 94       	ror	r12
     844:	b7 94       	ror	r11
     846:	a7 94       	ror	r10
     848:	0a 94       	dec	r0
     84a:	d2 f7       	brpl	.-12     	; 0x840 <__floatunsisf+0x56>
     84c:	40 e0       	ldi	r20, 0x00	; 0
     84e:	50 e0       	ldi	r21, 0x00	; 0
     850:	60 e0       	ldi	r22, 0x00	; 0
     852:	70 e0       	ldi	r23, 0x00	; 0
     854:	81 e0       	ldi	r24, 0x01	; 1
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	a0 e0       	ldi	r26, 0x00	; 0
     85a:	b0 e0       	ldi	r27, 0x00	; 0
     85c:	04 c0       	rjmp	.+8      	; 0x866 <__stack+0x7>
     85e:	88 0f       	add	r24, r24
     860:	99 1f       	adc	r25, r25
     862:	aa 1f       	adc	r26, r26
     864:	bb 1f       	adc	r27, r27
     866:	2a 95       	dec	r18
     868:	d2 f7       	brpl	.-12     	; 0x85e <__floatunsisf+0x74>
     86a:	01 97       	sbiw	r24, 0x01	; 1
     86c:	a1 09       	sbc	r26, r1
     86e:	b1 09       	sbc	r27, r1
     870:	8e 21       	and	r24, r14
     872:	9f 21       	and	r25, r15
     874:	a0 23       	and	r26, r16
     876:	b1 23       	and	r27, r17
     878:	00 97       	sbiw	r24, 0x00	; 0
     87a:	a1 05       	cpc	r26, r1
     87c:	b1 05       	cpc	r27, r1
     87e:	21 f0       	breq	.+8      	; 0x888 <__stack+0x29>
     880:	41 e0       	ldi	r20, 0x01	; 1
     882:	50 e0       	ldi	r21, 0x00	; 0
     884:	60 e0       	ldi	r22, 0x00	; 0
     886:	70 e0       	ldi	r23, 0x00	; 0
     888:	4a 29       	or	r20, r10
     88a:	5b 29       	or	r21, r11
     88c:	6c 29       	or	r22, r12
     88e:	7d 29       	or	r23, r13
     890:	4d 83       	std	Y+5, r20	; 0x05
     892:	5e 83       	std	Y+6, r21	; 0x06
     894:	6f 83       	std	Y+7, r22	; 0x07
     896:	78 87       	std	Y+8, r23	; 0x08
     898:	8e e1       	ldi	r24, 0x1E	; 30
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	8e 1b       	sub	r24, r30
     89e:	9f 0b       	sbc	r25, r31
     8a0:	9c 83       	std	Y+4, r25	; 0x04
     8a2:	8b 83       	std	Y+3, r24	; 0x03
     8a4:	12 c0       	rjmp	.+36     	; 0x8ca <__stack+0x6b>
     8a6:	30 97       	sbiw	r30, 0x00	; 0
     8a8:	81 f0       	breq	.+32     	; 0x8ca <__stack+0x6b>
     8aa:	0e 2e       	mov	r0, r30
     8ac:	04 c0       	rjmp	.+8      	; 0x8b6 <__stack+0x57>
     8ae:	ee 0c       	add	r14, r14
     8b0:	ff 1c       	adc	r15, r15
     8b2:	00 1f       	adc	r16, r16
     8b4:	11 1f       	adc	r17, r17
     8b6:	0a 94       	dec	r0
     8b8:	d2 f7       	brpl	.-12     	; 0x8ae <__stack+0x4f>
     8ba:	ed 82       	std	Y+5, r14	; 0x05
     8bc:	fe 82       	std	Y+6, r15	; 0x06
     8be:	0f 83       	std	Y+7, r16	; 0x07
     8c0:	18 87       	std	Y+8, r17	; 0x08
     8c2:	ce 1a       	sub	r12, r30
     8c4:	df 0a       	sbc	r13, r31
     8c6:	dc 82       	std	Y+4, r13	; 0x04
     8c8:	cb 82       	std	Y+3, r12	; 0x03
     8ca:	1a 82       	std	Y+2, r1	; 0x02
     8cc:	ce 01       	movw	r24, r28
     8ce:	01 96       	adiw	r24, 0x01	; 1
     8d0:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     8d4:	28 96       	adiw	r28, 0x08	; 8
     8d6:	ea e0       	ldi	r30, 0x0A	; 10
     8d8:	0c 94 05 0d 	jmp	0x1a0a	; 0x1a0a <__epilogue_restores__+0x10>

000008dc <__clzsi2>:
     8dc:	ef 92       	push	r14
     8de:	ff 92       	push	r15
     8e0:	0f 93       	push	r16
     8e2:	1f 93       	push	r17
     8e4:	7b 01       	movw	r14, r22
     8e6:	8c 01       	movw	r16, r24
     8e8:	80 e0       	ldi	r24, 0x00	; 0
     8ea:	e8 16       	cp	r14, r24
     8ec:	80 e0       	ldi	r24, 0x00	; 0
     8ee:	f8 06       	cpc	r15, r24
     8f0:	81 e0       	ldi	r24, 0x01	; 1
     8f2:	08 07       	cpc	r16, r24
     8f4:	80 e0       	ldi	r24, 0x00	; 0
     8f6:	18 07       	cpc	r17, r24
     8f8:	88 f4       	brcc	.+34     	; 0x91c <__clzsi2+0x40>
     8fa:	8f ef       	ldi	r24, 0xFF	; 255
     8fc:	e8 16       	cp	r14, r24
     8fe:	f1 04       	cpc	r15, r1
     900:	01 05       	cpc	r16, r1
     902:	11 05       	cpc	r17, r1
     904:	31 f0       	breq	.+12     	; 0x912 <__clzsi2+0x36>
     906:	28 f0       	brcs	.+10     	; 0x912 <__clzsi2+0x36>
     908:	88 e0       	ldi	r24, 0x08	; 8
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	a0 e0       	ldi	r26, 0x00	; 0
     90e:	b0 e0       	ldi	r27, 0x00	; 0
     910:	17 c0       	rjmp	.+46     	; 0x940 <__clzsi2+0x64>
     912:	80 e0       	ldi	r24, 0x00	; 0
     914:	90 e0       	ldi	r25, 0x00	; 0
     916:	a0 e0       	ldi	r26, 0x00	; 0
     918:	b0 e0       	ldi	r27, 0x00	; 0
     91a:	12 c0       	rjmp	.+36     	; 0x940 <__clzsi2+0x64>
     91c:	80 e0       	ldi	r24, 0x00	; 0
     91e:	e8 16       	cp	r14, r24
     920:	80 e0       	ldi	r24, 0x00	; 0
     922:	f8 06       	cpc	r15, r24
     924:	80 e0       	ldi	r24, 0x00	; 0
     926:	08 07       	cpc	r16, r24
     928:	81 e0       	ldi	r24, 0x01	; 1
     92a:	18 07       	cpc	r17, r24
     92c:	28 f0       	brcs	.+10     	; 0x938 <__clzsi2+0x5c>
     92e:	88 e1       	ldi	r24, 0x18	; 24
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	04 c0       	rjmp	.+8      	; 0x940 <__clzsi2+0x64>
     938:	80 e1       	ldi	r24, 0x10	; 16
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	a0 e0       	ldi	r26, 0x00	; 0
     93e:	b0 e0       	ldi	r27, 0x00	; 0
     940:	20 e2       	ldi	r18, 0x20	; 32
     942:	30 e0       	ldi	r19, 0x00	; 0
     944:	40 e0       	ldi	r20, 0x00	; 0
     946:	50 e0       	ldi	r21, 0x00	; 0
     948:	28 1b       	sub	r18, r24
     94a:	39 0b       	sbc	r19, r25
     94c:	4a 0b       	sbc	r20, r26
     94e:	5b 0b       	sbc	r21, r27
     950:	04 c0       	rjmp	.+8      	; 0x95a <__clzsi2+0x7e>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	8a 95       	dec	r24
     95c:	d2 f7       	brpl	.-12     	; 0x952 <__clzsi2+0x76>
     95e:	f7 01       	movw	r30, r14
     960:	e8 59       	subi	r30, 0x98	; 152
     962:	ff 4f       	sbci	r31, 0xFF	; 255
     964:	80 81       	ld	r24, Z
     966:	28 1b       	sub	r18, r24
     968:	31 09       	sbc	r19, r1
     96a:	41 09       	sbc	r20, r1
     96c:	51 09       	sbc	r21, r1
     96e:	c9 01       	movw	r24, r18
     970:	1f 91       	pop	r17
     972:	0f 91       	pop	r16
     974:	ff 90       	pop	r15
     976:	ef 90       	pop	r14
     978:	08 95       	ret

0000097a <__pack_f>:
     97a:	df 92       	push	r13
     97c:	ef 92       	push	r14
     97e:	ff 92       	push	r15
     980:	0f 93       	push	r16
     982:	1f 93       	push	r17
     984:	fc 01       	movw	r30, r24
     986:	e4 80       	ldd	r14, Z+4	; 0x04
     988:	f5 80       	ldd	r15, Z+5	; 0x05
     98a:	06 81       	ldd	r16, Z+6	; 0x06
     98c:	17 81       	ldd	r17, Z+7	; 0x07
     98e:	d1 80       	ldd	r13, Z+1	; 0x01
     990:	80 81       	ld	r24, Z
     992:	82 30       	cpi	r24, 0x02	; 2
     994:	48 f4       	brcc	.+18     	; 0x9a8 <__pack_f+0x2e>
     996:	80 e0       	ldi	r24, 0x00	; 0
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	a0 e1       	ldi	r26, 0x10	; 16
     99c:	b0 e0       	ldi	r27, 0x00	; 0
     99e:	e8 2a       	or	r14, r24
     9a0:	f9 2a       	or	r15, r25
     9a2:	0a 2b       	or	r16, r26
     9a4:	1b 2b       	or	r17, r27
     9a6:	a5 c0       	rjmp	.+330    	; 0xaf2 <__pack_f+0x178>
     9a8:	84 30       	cpi	r24, 0x04	; 4
     9aa:	09 f4       	brne	.+2      	; 0x9ae <__pack_f+0x34>
     9ac:	9f c0       	rjmp	.+318    	; 0xaec <__pack_f+0x172>
     9ae:	82 30       	cpi	r24, 0x02	; 2
     9b0:	21 f4       	brne	.+8      	; 0x9ba <__pack_f+0x40>
     9b2:	ee 24       	eor	r14, r14
     9b4:	ff 24       	eor	r15, r15
     9b6:	87 01       	movw	r16, r14
     9b8:	05 c0       	rjmp	.+10     	; 0x9c4 <__pack_f+0x4a>
     9ba:	e1 14       	cp	r14, r1
     9bc:	f1 04       	cpc	r15, r1
     9be:	01 05       	cpc	r16, r1
     9c0:	11 05       	cpc	r17, r1
     9c2:	19 f4       	brne	.+6      	; 0x9ca <__pack_f+0x50>
     9c4:	e0 e0       	ldi	r30, 0x00	; 0
     9c6:	f0 e0       	ldi	r31, 0x00	; 0
     9c8:	96 c0       	rjmp	.+300    	; 0xaf6 <__pack_f+0x17c>
     9ca:	62 81       	ldd	r22, Z+2	; 0x02
     9cc:	73 81       	ldd	r23, Z+3	; 0x03
     9ce:	9f ef       	ldi	r25, 0xFF	; 255
     9d0:	62 38       	cpi	r22, 0x82	; 130
     9d2:	79 07       	cpc	r23, r25
     9d4:	0c f0       	brlt	.+2      	; 0x9d8 <__pack_f+0x5e>
     9d6:	5b c0       	rjmp	.+182    	; 0xa8e <__pack_f+0x114>
     9d8:	22 e8       	ldi	r18, 0x82	; 130
     9da:	3f ef       	ldi	r19, 0xFF	; 255
     9dc:	26 1b       	sub	r18, r22
     9de:	37 0b       	sbc	r19, r23
     9e0:	2a 31       	cpi	r18, 0x1A	; 26
     9e2:	31 05       	cpc	r19, r1
     9e4:	2c f0       	brlt	.+10     	; 0x9f0 <__pack_f+0x76>
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	40 e0       	ldi	r20, 0x00	; 0
     9ec:	50 e0       	ldi	r21, 0x00	; 0
     9ee:	2a c0       	rjmp	.+84     	; 0xa44 <__pack_f+0xca>
     9f0:	b8 01       	movw	r22, r16
     9f2:	a7 01       	movw	r20, r14
     9f4:	02 2e       	mov	r0, r18
     9f6:	04 c0       	rjmp	.+8      	; 0xa00 <__pack_f+0x86>
     9f8:	76 95       	lsr	r23
     9fa:	67 95       	ror	r22
     9fc:	57 95       	ror	r21
     9fe:	47 95       	ror	r20
     a00:	0a 94       	dec	r0
     a02:	d2 f7       	brpl	.-12     	; 0x9f8 <__pack_f+0x7e>
     a04:	81 e0       	ldi	r24, 0x01	; 1
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	a0 e0       	ldi	r26, 0x00	; 0
     a0a:	b0 e0       	ldi	r27, 0x00	; 0
     a0c:	04 c0       	rjmp	.+8      	; 0xa16 <__pack_f+0x9c>
     a0e:	88 0f       	add	r24, r24
     a10:	99 1f       	adc	r25, r25
     a12:	aa 1f       	adc	r26, r26
     a14:	bb 1f       	adc	r27, r27
     a16:	2a 95       	dec	r18
     a18:	d2 f7       	brpl	.-12     	; 0xa0e <__pack_f+0x94>
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	a1 09       	sbc	r26, r1
     a1e:	b1 09       	sbc	r27, r1
     a20:	8e 21       	and	r24, r14
     a22:	9f 21       	and	r25, r15
     a24:	a0 23       	and	r26, r16
     a26:	b1 23       	and	r27, r17
     a28:	00 97       	sbiw	r24, 0x00	; 0
     a2a:	a1 05       	cpc	r26, r1
     a2c:	b1 05       	cpc	r27, r1
     a2e:	21 f0       	breq	.+8      	; 0xa38 <__pack_f+0xbe>
     a30:	81 e0       	ldi	r24, 0x01	; 1
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	a0 e0       	ldi	r26, 0x00	; 0
     a36:	b0 e0       	ldi	r27, 0x00	; 0
     a38:	9a 01       	movw	r18, r20
     a3a:	ab 01       	movw	r20, r22
     a3c:	28 2b       	or	r18, r24
     a3e:	39 2b       	or	r19, r25
     a40:	4a 2b       	or	r20, r26
     a42:	5b 2b       	or	r21, r27
     a44:	da 01       	movw	r26, r20
     a46:	c9 01       	movw	r24, r18
     a48:	8f 77       	andi	r24, 0x7F	; 127
     a4a:	90 70       	andi	r25, 0x00	; 0
     a4c:	a0 70       	andi	r26, 0x00	; 0
     a4e:	b0 70       	andi	r27, 0x00	; 0
     a50:	80 34       	cpi	r24, 0x40	; 64
     a52:	91 05       	cpc	r25, r1
     a54:	a1 05       	cpc	r26, r1
     a56:	b1 05       	cpc	r27, r1
     a58:	39 f4       	brne	.+14     	; 0xa68 <__pack_f+0xee>
     a5a:	27 ff       	sbrs	r18, 7
     a5c:	09 c0       	rjmp	.+18     	; 0xa70 <__pack_f+0xf6>
     a5e:	20 5c       	subi	r18, 0xC0	; 192
     a60:	3f 4f       	sbci	r19, 0xFF	; 255
     a62:	4f 4f       	sbci	r20, 0xFF	; 255
     a64:	5f 4f       	sbci	r21, 0xFF	; 255
     a66:	04 c0       	rjmp	.+8      	; 0xa70 <__pack_f+0xf6>
     a68:	21 5c       	subi	r18, 0xC1	; 193
     a6a:	3f 4f       	sbci	r19, 0xFF	; 255
     a6c:	4f 4f       	sbci	r20, 0xFF	; 255
     a6e:	5f 4f       	sbci	r21, 0xFF	; 255
     a70:	e0 e0       	ldi	r30, 0x00	; 0
     a72:	f0 e0       	ldi	r31, 0x00	; 0
     a74:	20 30       	cpi	r18, 0x00	; 0
     a76:	a0 e0       	ldi	r26, 0x00	; 0
     a78:	3a 07       	cpc	r19, r26
     a7a:	a0 e0       	ldi	r26, 0x00	; 0
     a7c:	4a 07       	cpc	r20, r26
     a7e:	a0 e4       	ldi	r26, 0x40	; 64
     a80:	5a 07       	cpc	r21, r26
     a82:	10 f0       	brcs	.+4      	; 0xa88 <__pack_f+0x10e>
     a84:	e1 e0       	ldi	r30, 0x01	; 1
     a86:	f0 e0       	ldi	r31, 0x00	; 0
     a88:	79 01       	movw	r14, r18
     a8a:	8a 01       	movw	r16, r20
     a8c:	27 c0       	rjmp	.+78     	; 0xadc <__pack_f+0x162>
     a8e:	60 38       	cpi	r22, 0x80	; 128
     a90:	71 05       	cpc	r23, r1
     a92:	64 f5       	brge	.+88     	; 0xaec <__pack_f+0x172>
     a94:	fb 01       	movw	r30, r22
     a96:	e1 58       	subi	r30, 0x81	; 129
     a98:	ff 4f       	sbci	r31, 0xFF	; 255
     a9a:	d8 01       	movw	r26, r16
     a9c:	c7 01       	movw	r24, r14
     a9e:	8f 77       	andi	r24, 0x7F	; 127
     aa0:	90 70       	andi	r25, 0x00	; 0
     aa2:	a0 70       	andi	r26, 0x00	; 0
     aa4:	b0 70       	andi	r27, 0x00	; 0
     aa6:	80 34       	cpi	r24, 0x40	; 64
     aa8:	91 05       	cpc	r25, r1
     aaa:	a1 05       	cpc	r26, r1
     aac:	b1 05       	cpc	r27, r1
     aae:	39 f4       	brne	.+14     	; 0xabe <__pack_f+0x144>
     ab0:	e7 fe       	sbrs	r14, 7
     ab2:	0d c0       	rjmp	.+26     	; 0xace <__pack_f+0x154>
     ab4:	80 e4       	ldi	r24, 0x40	; 64
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	a0 e0       	ldi	r26, 0x00	; 0
     aba:	b0 e0       	ldi	r27, 0x00	; 0
     abc:	04 c0       	rjmp	.+8      	; 0xac6 <__pack_f+0x14c>
     abe:	8f e3       	ldi	r24, 0x3F	; 63
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	a0 e0       	ldi	r26, 0x00	; 0
     ac4:	b0 e0       	ldi	r27, 0x00	; 0
     ac6:	e8 0e       	add	r14, r24
     ac8:	f9 1e       	adc	r15, r25
     aca:	0a 1f       	adc	r16, r26
     acc:	1b 1f       	adc	r17, r27
     ace:	17 ff       	sbrs	r17, 7
     ad0:	05 c0       	rjmp	.+10     	; 0xadc <__pack_f+0x162>
     ad2:	16 95       	lsr	r17
     ad4:	07 95       	ror	r16
     ad6:	f7 94       	ror	r15
     ad8:	e7 94       	ror	r14
     ada:	31 96       	adiw	r30, 0x01	; 1
     adc:	87 e0       	ldi	r24, 0x07	; 7
     ade:	16 95       	lsr	r17
     ae0:	07 95       	ror	r16
     ae2:	f7 94       	ror	r15
     ae4:	e7 94       	ror	r14
     ae6:	8a 95       	dec	r24
     ae8:	d1 f7       	brne	.-12     	; 0xade <__pack_f+0x164>
     aea:	05 c0       	rjmp	.+10     	; 0xaf6 <__pack_f+0x17c>
     aec:	ee 24       	eor	r14, r14
     aee:	ff 24       	eor	r15, r15
     af0:	87 01       	movw	r16, r14
     af2:	ef ef       	ldi	r30, 0xFF	; 255
     af4:	f0 e0       	ldi	r31, 0x00	; 0
     af6:	6e 2f       	mov	r22, r30
     af8:	67 95       	ror	r22
     afa:	66 27       	eor	r22, r22
     afc:	67 95       	ror	r22
     afe:	90 2f       	mov	r25, r16
     b00:	9f 77       	andi	r25, 0x7F	; 127
     b02:	d7 94       	ror	r13
     b04:	dd 24       	eor	r13, r13
     b06:	d7 94       	ror	r13
     b08:	8e 2f       	mov	r24, r30
     b0a:	86 95       	lsr	r24
     b0c:	49 2f       	mov	r20, r25
     b0e:	46 2b       	or	r20, r22
     b10:	58 2f       	mov	r21, r24
     b12:	5d 29       	or	r21, r13
     b14:	b7 01       	movw	r22, r14
     b16:	ca 01       	movw	r24, r20
     b18:	1f 91       	pop	r17
     b1a:	0f 91       	pop	r16
     b1c:	ff 90       	pop	r15
     b1e:	ef 90       	pop	r14
     b20:	df 90       	pop	r13
     b22:	08 95       	ret

00000b24 <__unpack_f>:
     b24:	fc 01       	movw	r30, r24
     b26:	db 01       	movw	r26, r22
     b28:	40 81       	ld	r20, Z
     b2a:	51 81       	ldd	r21, Z+1	; 0x01
     b2c:	22 81       	ldd	r18, Z+2	; 0x02
     b2e:	62 2f       	mov	r22, r18
     b30:	6f 77       	andi	r22, 0x7F	; 127
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	22 1f       	adc	r18, r18
     b36:	22 27       	eor	r18, r18
     b38:	22 1f       	adc	r18, r18
     b3a:	93 81       	ldd	r25, Z+3	; 0x03
     b3c:	89 2f       	mov	r24, r25
     b3e:	88 0f       	add	r24, r24
     b40:	82 2b       	or	r24, r18
     b42:	28 2f       	mov	r18, r24
     b44:	30 e0       	ldi	r19, 0x00	; 0
     b46:	99 1f       	adc	r25, r25
     b48:	99 27       	eor	r25, r25
     b4a:	99 1f       	adc	r25, r25
     b4c:	11 96       	adiw	r26, 0x01	; 1
     b4e:	9c 93       	st	X, r25
     b50:	11 97       	sbiw	r26, 0x01	; 1
     b52:	21 15       	cp	r18, r1
     b54:	31 05       	cpc	r19, r1
     b56:	a9 f5       	brne	.+106    	; 0xbc2 <__unpack_f+0x9e>
     b58:	41 15       	cp	r20, r1
     b5a:	51 05       	cpc	r21, r1
     b5c:	61 05       	cpc	r22, r1
     b5e:	71 05       	cpc	r23, r1
     b60:	11 f4       	brne	.+4      	; 0xb66 <__unpack_f+0x42>
     b62:	82 e0       	ldi	r24, 0x02	; 2
     b64:	37 c0       	rjmp	.+110    	; 0xbd4 <__unpack_f+0xb0>
     b66:	82 e8       	ldi	r24, 0x82	; 130
     b68:	9f ef       	ldi	r25, 0xFF	; 255
     b6a:	13 96       	adiw	r26, 0x03	; 3
     b6c:	9c 93       	st	X, r25
     b6e:	8e 93       	st	-X, r24
     b70:	12 97       	sbiw	r26, 0x02	; 2
     b72:	9a 01       	movw	r18, r20
     b74:	ab 01       	movw	r20, r22
     b76:	67 e0       	ldi	r22, 0x07	; 7
     b78:	22 0f       	add	r18, r18
     b7a:	33 1f       	adc	r19, r19
     b7c:	44 1f       	adc	r20, r20
     b7e:	55 1f       	adc	r21, r21
     b80:	6a 95       	dec	r22
     b82:	d1 f7       	brne	.-12     	; 0xb78 <__unpack_f+0x54>
     b84:	83 e0       	ldi	r24, 0x03	; 3
     b86:	8c 93       	st	X, r24
     b88:	0d c0       	rjmp	.+26     	; 0xba4 <__unpack_f+0x80>
     b8a:	22 0f       	add	r18, r18
     b8c:	33 1f       	adc	r19, r19
     b8e:	44 1f       	adc	r20, r20
     b90:	55 1f       	adc	r21, r21
     b92:	12 96       	adiw	r26, 0x02	; 2
     b94:	8d 91       	ld	r24, X+
     b96:	9c 91       	ld	r25, X
     b98:	13 97       	sbiw	r26, 0x03	; 3
     b9a:	01 97       	sbiw	r24, 0x01	; 1
     b9c:	13 96       	adiw	r26, 0x03	; 3
     b9e:	9c 93       	st	X, r25
     ba0:	8e 93       	st	-X, r24
     ba2:	12 97       	sbiw	r26, 0x02	; 2
     ba4:	20 30       	cpi	r18, 0x00	; 0
     ba6:	80 e0       	ldi	r24, 0x00	; 0
     ba8:	38 07       	cpc	r19, r24
     baa:	80 e0       	ldi	r24, 0x00	; 0
     bac:	48 07       	cpc	r20, r24
     bae:	80 e4       	ldi	r24, 0x40	; 64
     bb0:	58 07       	cpc	r21, r24
     bb2:	58 f3       	brcs	.-42     	; 0xb8a <__unpack_f+0x66>
     bb4:	14 96       	adiw	r26, 0x04	; 4
     bb6:	2d 93       	st	X+, r18
     bb8:	3d 93       	st	X+, r19
     bba:	4d 93       	st	X+, r20
     bbc:	5c 93       	st	X, r21
     bbe:	17 97       	sbiw	r26, 0x07	; 7
     bc0:	08 95       	ret
     bc2:	2f 3f       	cpi	r18, 0xFF	; 255
     bc4:	31 05       	cpc	r19, r1
     bc6:	79 f4       	brne	.+30     	; 0xbe6 <__unpack_f+0xc2>
     bc8:	41 15       	cp	r20, r1
     bca:	51 05       	cpc	r21, r1
     bcc:	61 05       	cpc	r22, r1
     bce:	71 05       	cpc	r23, r1
     bd0:	19 f4       	brne	.+6      	; 0xbd8 <__unpack_f+0xb4>
     bd2:	84 e0       	ldi	r24, 0x04	; 4
     bd4:	8c 93       	st	X, r24
     bd6:	08 95       	ret
     bd8:	64 ff       	sbrs	r22, 4
     bda:	03 c0       	rjmp	.+6      	; 0xbe2 <__unpack_f+0xbe>
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	8c 93       	st	X, r24
     be0:	12 c0       	rjmp	.+36     	; 0xc06 <__unpack_f+0xe2>
     be2:	1c 92       	st	X, r1
     be4:	10 c0       	rjmp	.+32     	; 0xc06 <__unpack_f+0xe2>
     be6:	2f 57       	subi	r18, 0x7F	; 127
     be8:	30 40       	sbci	r19, 0x00	; 0
     bea:	13 96       	adiw	r26, 0x03	; 3
     bec:	3c 93       	st	X, r19
     bee:	2e 93       	st	-X, r18
     bf0:	12 97       	sbiw	r26, 0x02	; 2
     bf2:	83 e0       	ldi	r24, 0x03	; 3
     bf4:	8c 93       	st	X, r24
     bf6:	87 e0       	ldi	r24, 0x07	; 7
     bf8:	44 0f       	add	r20, r20
     bfa:	55 1f       	adc	r21, r21
     bfc:	66 1f       	adc	r22, r22
     bfe:	77 1f       	adc	r23, r23
     c00:	8a 95       	dec	r24
     c02:	d1 f7       	brne	.-12     	; 0xbf8 <__unpack_f+0xd4>
     c04:	70 64       	ori	r23, 0x40	; 64
     c06:	14 96       	adiw	r26, 0x04	; 4
     c08:	4d 93       	st	X+, r20
     c0a:	5d 93       	st	X+, r21
     c0c:	6d 93       	st	X+, r22
     c0e:	7c 93       	st	X, r23
     c10:	17 97       	sbiw	r26, 0x07	; 7
     c12:	08 95       	ret

00000c14 <__fpcmp_parts_f>:
     c14:	1f 93       	push	r17
     c16:	dc 01       	movw	r26, r24
     c18:	fb 01       	movw	r30, r22
     c1a:	9c 91       	ld	r25, X
     c1c:	92 30       	cpi	r25, 0x02	; 2
     c1e:	08 f4       	brcc	.+2      	; 0xc22 <__fpcmp_parts_f+0xe>
     c20:	47 c0       	rjmp	.+142    	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c22:	80 81       	ld	r24, Z
     c24:	82 30       	cpi	r24, 0x02	; 2
     c26:	08 f4       	brcc	.+2      	; 0xc2a <__fpcmp_parts_f+0x16>
     c28:	43 c0       	rjmp	.+134    	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c2a:	94 30       	cpi	r25, 0x04	; 4
     c2c:	51 f4       	brne	.+20     	; 0xc42 <__fpcmp_parts_f+0x2e>
     c2e:	11 96       	adiw	r26, 0x01	; 1
     c30:	1c 91       	ld	r17, X
     c32:	84 30       	cpi	r24, 0x04	; 4
     c34:	99 f5       	brne	.+102    	; 0xc9c <__fpcmp_parts_f+0x88>
     c36:	81 81       	ldd	r24, Z+1	; 0x01
     c38:	68 2f       	mov	r22, r24
     c3a:	70 e0       	ldi	r23, 0x00	; 0
     c3c:	61 1b       	sub	r22, r17
     c3e:	71 09       	sbc	r23, r1
     c40:	3f c0       	rjmp	.+126    	; 0xcc0 <__fpcmp_parts_f+0xac>
     c42:	84 30       	cpi	r24, 0x04	; 4
     c44:	21 f0       	breq	.+8      	; 0xc4e <__fpcmp_parts_f+0x3a>
     c46:	92 30       	cpi	r25, 0x02	; 2
     c48:	31 f4       	brne	.+12     	; 0xc56 <__fpcmp_parts_f+0x42>
     c4a:	82 30       	cpi	r24, 0x02	; 2
     c4c:	b9 f1       	breq	.+110    	; 0xcbc <__fpcmp_parts_f+0xa8>
     c4e:	81 81       	ldd	r24, Z+1	; 0x01
     c50:	88 23       	and	r24, r24
     c52:	89 f1       	breq	.+98     	; 0xcb6 <__fpcmp_parts_f+0xa2>
     c54:	2d c0       	rjmp	.+90     	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c56:	11 96       	adiw	r26, 0x01	; 1
     c58:	1c 91       	ld	r17, X
     c5a:	11 97       	sbiw	r26, 0x01	; 1
     c5c:	82 30       	cpi	r24, 0x02	; 2
     c5e:	f1 f0       	breq	.+60     	; 0xc9c <__fpcmp_parts_f+0x88>
     c60:	81 81       	ldd	r24, Z+1	; 0x01
     c62:	18 17       	cp	r17, r24
     c64:	d9 f4       	brne	.+54     	; 0xc9c <__fpcmp_parts_f+0x88>
     c66:	12 96       	adiw	r26, 0x02	; 2
     c68:	2d 91       	ld	r18, X+
     c6a:	3c 91       	ld	r19, X
     c6c:	13 97       	sbiw	r26, 0x03	; 3
     c6e:	82 81       	ldd	r24, Z+2	; 0x02
     c70:	93 81       	ldd	r25, Z+3	; 0x03
     c72:	82 17       	cp	r24, r18
     c74:	93 07       	cpc	r25, r19
     c76:	94 f0       	brlt	.+36     	; 0xc9c <__fpcmp_parts_f+0x88>
     c78:	28 17       	cp	r18, r24
     c7a:	39 07       	cpc	r19, r25
     c7c:	bc f0       	brlt	.+46     	; 0xcac <__fpcmp_parts_f+0x98>
     c7e:	14 96       	adiw	r26, 0x04	; 4
     c80:	8d 91       	ld	r24, X+
     c82:	9d 91       	ld	r25, X+
     c84:	0d 90       	ld	r0, X+
     c86:	bc 91       	ld	r27, X
     c88:	a0 2d       	mov	r26, r0
     c8a:	24 81       	ldd	r18, Z+4	; 0x04
     c8c:	35 81       	ldd	r19, Z+5	; 0x05
     c8e:	46 81       	ldd	r20, Z+6	; 0x06
     c90:	57 81       	ldd	r21, Z+7	; 0x07
     c92:	28 17       	cp	r18, r24
     c94:	39 07       	cpc	r19, r25
     c96:	4a 07       	cpc	r20, r26
     c98:	5b 07       	cpc	r21, r27
     c9a:	18 f4       	brcc	.+6      	; 0xca2 <__fpcmp_parts_f+0x8e>
     c9c:	11 23       	and	r17, r17
     c9e:	41 f0       	breq	.+16     	; 0xcb0 <__fpcmp_parts_f+0x9c>
     ca0:	0a c0       	rjmp	.+20     	; 0xcb6 <__fpcmp_parts_f+0xa2>
     ca2:	82 17       	cp	r24, r18
     ca4:	93 07       	cpc	r25, r19
     ca6:	a4 07       	cpc	r26, r20
     ca8:	b5 07       	cpc	r27, r21
     caa:	40 f4       	brcc	.+16     	; 0xcbc <__fpcmp_parts_f+0xa8>
     cac:	11 23       	and	r17, r17
     cae:	19 f0       	breq	.+6      	; 0xcb6 <__fpcmp_parts_f+0xa2>
     cb0:	61 e0       	ldi	r22, 0x01	; 1
     cb2:	70 e0       	ldi	r23, 0x00	; 0
     cb4:	05 c0       	rjmp	.+10     	; 0xcc0 <__fpcmp_parts_f+0xac>
     cb6:	6f ef       	ldi	r22, 0xFF	; 255
     cb8:	7f ef       	ldi	r23, 0xFF	; 255
     cba:	02 c0       	rjmp	.+4      	; 0xcc0 <__fpcmp_parts_f+0xac>
     cbc:	60 e0       	ldi	r22, 0x00	; 0
     cbe:	70 e0       	ldi	r23, 0x00	; 0
     cc0:	cb 01       	movw	r24, r22
     cc2:	1f 91       	pop	r17
     cc4:	08 95       	ret

00000cc6 <Seven_Segment_Init>:
#include"7Segment.h"
#include"avr/delay.h"


void Seven_Segment_Init(void)
{
     cc6:	df 93       	push	r29
     cc8:	cf 93       	push	r28
     cca:	cd b7       	in	r28, 0x3d	; 61
     ccc:	de b7       	in	r29, 0x3e	; 62
	if(PortOf7Seg_1 <= PORTD)
	{
		SetPortMode(PortOf7Seg_1,OUTPUT);
     cce:	83 e0       	ldi	r24, 0x03	; 3
     cd0:	61 e0       	ldi	r22, 0x01	; 1
     cd2:	0e 94 d2 0b 	call	0x17a4	; 0x17a4 <SetPortMode>
		SetPortValue(PortOf7Seg_1,LOW);
     cd6:	83 e0       	ldi	r24, 0x03	; 3
     cd8:	60 e0       	ldi	r22, 0x00	; 0
     cda:	0e 94 55 0b 	call	0x16aa	; 0x16aa <SetPortValue>
	}
	else
	{
		//report error
	}
}
     cde:	cf 91       	pop	r28
     ce0:	df 91       	pop	r29
     ce2:	08 95       	ret

00000ce4 <Display_Number>:

void Display_Number(u8 N)
{
     ce4:	df 93       	push	r29
     ce6:	cf 93       	push	r28
     ce8:	00 d0       	rcall	.+0      	; 0xcea <Display_Number+0x6>
     cea:	0f 92       	push	r0
     cec:	cd b7       	in	r28, 0x3d	; 61
     cee:	de b7       	in	r29, 0x3e	; 62
     cf0:	89 83       	std	Y+1, r24	; 0x01

			switch(N)
     cf2:	89 81       	ldd	r24, Y+1	; 0x01
     cf4:	28 2f       	mov	r18, r24
     cf6:	30 e0       	ldi	r19, 0x00	; 0
     cf8:	3b 83       	std	Y+3, r19	; 0x03
     cfa:	2a 83       	std	Y+2, r18	; 0x02
     cfc:	8a 81       	ldd	r24, Y+2	; 0x02
     cfe:	9b 81       	ldd	r25, Y+3	; 0x03
     d00:	84 30       	cpi	r24, 0x04	; 4
     d02:	91 05       	cpc	r25, r1
     d04:	09 f4       	brne	.+2      	; 0xd08 <Display_Number+0x24>
     d06:	b5 c0       	rjmp	.+362    	; 0xe72 <Display_Number+0x18e>
     d08:	2a 81       	ldd	r18, Y+2	; 0x02
     d0a:	3b 81       	ldd	r19, Y+3	; 0x03
     d0c:	25 30       	cpi	r18, 0x05	; 5
     d0e:	31 05       	cpc	r19, r1
     d10:	ec f4       	brge	.+58     	; 0xd4c <Display_Number+0x68>
     d12:	8a 81       	ldd	r24, Y+2	; 0x02
     d14:	9b 81       	ldd	r25, Y+3	; 0x03
     d16:	81 30       	cpi	r24, 0x01	; 1
     d18:	91 05       	cpc	r25, r1
     d1a:	09 f4       	brne	.+2      	; 0xd1e <Display_Number+0x3a>
     d1c:	5f c0       	rjmp	.+190    	; 0xddc <Display_Number+0xf8>
     d1e:	2a 81       	ldd	r18, Y+2	; 0x02
     d20:	3b 81       	ldd	r19, Y+3	; 0x03
     d22:	22 30       	cpi	r18, 0x02	; 2
     d24:	31 05       	cpc	r19, r1
     d26:	2c f4       	brge	.+10     	; 0xd32 <Display_Number+0x4e>
     d28:	8a 81       	ldd	r24, Y+2	; 0x02
     d2a:	9b 81       	ldd	r25, Y+3	; 0x03
     d2c:	00 97       	sbiw	r24, 0x00	; 0
     d2e:	99 f1       	breq	.+102    	; 0xd96 <Display_Number+0xb2>
     d30:	3a c1       	rjmp	.+628    	; 0xfa6 <Display_Number+0x2c2>
     d32:	2a 81       	ldd	r18, Y+2	; 0x02
     d34:	3b 81       	ldd	r19, Y+3	; 0x03
     d36:	22 30       	cpi	r18, 0x02	; 2
     d38:	31 05       	cpc	r19, r1
     d3a:	09 f4       	brne	.+2      	; 0xd3e <Display_Number+0x5a>
     d3c:	5e c0       	rjmp	.+188    	; 0xdfa <Display_Number+0x116>
     d3e:	8a 81       	ldd	r24, Y+2	; 0x02
     d40:	9b 81       	ldd	r25, Y+3	; 0x03
     d42:	83 30       	cpi	r24, 0x03	; 3
     d44:	91 05       	cpc	r25, r1
     d46:	09 f4       	brne	.+2      	; 0xd4a <Display_Number+0x66>
     d48:	76 c0       	rjmp	.+236    	; 0xe36 <Display_Number+0x152>
     d4a:	2d c1       	rjmp	.+602    	; 0xfa6 <Display_Number+0x2c2>
     d4c:	2a 81       	ldd	r18, Y+2	; 0x02
     d4e:	3b 81       	ldd	r19, Y+3	; 0x03
     d50:	27 30       	cpi	r18, 0x07	; 7
     d52:	31 05       	cpc	r19, r1
     d54:	09 f4       	brne	.+2      	; 0xd58 <Display_Number+0x74>
     d56:	e7 c0       	rjmp	.+462    	; 0xf26 <Display_Number+0x242>
     d58:	8a 81       	ldd	r24, Y+2	; 0x02
     d5a:	9b 81       	ldd	r25, Y+3	; 0x03
     d5c:	88 30       	cpi	r24, 0x08	; 8
     d5e:	91 05       	cpc	r25, r1
     d60:	6c f4       	brge	.+26     	; 0xd7c <Display_Number+0x98>
     d62:	2a 81       	ldd	r18, Y+2	; 0x02
     d64:	3b 81       	ldd	r19, Y+3	; 0x03
     d66:	25 30       	cpi	r18, 0x05	; 5
     d68:	31 05       	cpc	r19, r1
     d6a:	09 f4       	brne	.+2      	; 0xd6e <Display_Number+0x8a>
     d6c:	9b c0       	rjmp	.+310    	; 0xea4 <Display_Number+0x1c0>
     d6e:	8a 81       	ldd	r24, Y+2	; 0x02
     d70:	9b 81       	ldd	r25, Y+3	; 0x03
     d72:	86 30       	cpi	r24, 0x06	; 6
     d74:	91 05       	cpc	r25, r1
     d76:	09 f4       	brne	.+2      	; 0xd7a <Display_Number+0x96>
     d78:	b3 c0       	rjmp	.+358    	; 0xee0 <Display_Number+0x1fc>
     d7a:	15 c1       	rjmp	.+554    	; 0xfa6 <Display_Number+0x2c2>
     d7c:	2a 81       	ldd	r18, Y+2	; 0x02
     d7e:	3b 81       	ldd	r19, Y+3	; 0x03
     d80:	28 30       	cpi	r18, 0x08	; 8
     d82:	31 05       	cpc	r19, r1
     d84:	09 f4       	brne	.+2      	; 0xd88 <Display_Number+0xa4>
     d86:	e3 c0       	rjmp	.+454    	; 0xf4e <Display_Number+0x26a>
     d88:	8a 81       	ldd	r24, Y+2	; 0x02
     d8a:	9b 81       	ldd	r25, Y+3	; 0x03
     d8c:	89 30       	cpi	r24, 0x09	; 9
     d8e:	91 05       	cpc	r25, r1
     d90:	09 f4       	brne	.+2      	; 0xd94 <Display_Number+0xb0>
     d92:	e6 c0       	rjmp	.+460    	; 0xf60 <Display_Number+0x27c>
     d94:	08 c1       	rjmp	.+528    	; 0xfa6 <Display_Number+0x2c2>
			{
			case 0:
				SetPortValue(PortOf7Seg_1,HIGH);
     d96:	83 e0       	ldi	r24, 0x03	; 3
     d98:	61 e0       	ldi	r22, 0x01	; 1
     d9a:	0e 94 55 0b 	call	0x16aa	; 0x16aa <SetPortValue>
				SetPinValue(PIN0,PortOf7Seg_1,LOW);
     d9e:	80 e0       	ldi	r24, 0x00	; 0
     da0:	63 e0       	ldi	r22, 0x03	; 3
     da2:	40 e0       	ldi	r20, 0x00	; 0
     da4:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN1,PortOf7Seg_1,LOW);
     da8:	81 e0       	ldi	r24, 0x01	; 1
     daa:	63 e0       	ldi	r22, 0x03	; 3
     dac:	40 e0       	ldi	r20, 0x00	; 0
     dae:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN2,PortOf7Seg_1,LOW);
     db2:	82 e0       	ldi	r24, 0x02	; 2
     db4:	63 e0       	ldi	r22, 0x03	; 3
     db6:	40 e0       	ldi	r20, 0x00	; 0
     db8:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN3,PortOf7Seg_1,LOW);
     dbc:	83 e0       	ldi	r24, 0x03	; 3
     dbe:	63 e0       	ldi	r22, 0x03	; 3
     dc0:	40 e0       	ldi	r20, 0x00	; 0
     dc2:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN4,PortOf7Seg_1,LOW);
     dc6:	84 e0       	ldi	r24, 0x04	; 4
     dc8:	63 e0       	ldi	r22, 0x03	; 3
     dca:	40 e0       	ldi	r20, 0x00	; 0
     dcc:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN5,PortOf7Seg_1,LOW);
     dd0:	85 e0       	ldi	r24, 0x05	; 5
     dd2:	63 e0       	ldi	r22, 0x03	; 3
     dd4:	40 e0       	ldi	r20, 0x00	; 0
     dd6:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
     dda:	e9 c0       	rjmp	.+466    	; 0xfae <Display_Number+0x2ca>
				break;
			case 1:
				SetPortValue(PortOf7Seg_1,HIGH);
     ddc:	83 e0       	ldi	r24, 0x03	; 3
     dde:	61 e0       	ldi	r22, 0x01	; 1
     de0:	0e 94 55 0b 	call	0x16aa	; 0x16aa <SetPortValue>
				SetPinValue(PIN1,PortOf7Seg_1,LOW);
     de4:	81 e0       	ldi	r24, 0x01	; 1
     de6:	63 e0       	ldi	r22, 0x03	; 3
     de8:	40 e0       	ldi	r20, 0x00	; 0
     dea:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN2,PortOf7Seg_1,LOW);
     dee:	82 e0       	ldi	r24, 0x02	; 2
     df0:	63 e0       	ldi	r22, 0x03	; 3
     df2:	40 e0       	ldi	r20, 0x00	; 0
     df4:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
     df8:	da c0       	rjmp	.+436    	; 0xfae <Display_Number+0x2ca>
				break;
			case 2:
				SetPortValue(PortOf7Seg_1,HIGH);
     dfa:	83 e0       	ldi	r24, 0x03	; 3
     dfc:	61 e0       	ldi	r22, 0x01	; 1
     dfe:	0e 94 55 0b 	call	0x16aa	; 0x16aa <SetPortValue>
				SetPinValue(PIN0,PortOf7Seg_1,LOW);
     e02:	80 e0       	ldi	r24, 0x00	; 0
     e04:	63 e0       	ldi	r22, 0x03	; 3
     e06:	40 e0       	ldi	r20, 0x00	; 0
     e08:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN1,PortOf7Seg_1,LOW);
     e0c:	81 e0       	ldi	r24, 0x01	; 1
     e0e:	63 e0       	ldi	r22, 0x03	; 3
     e10:	40 e0       	ldi	r20, 0x00	; 0
     e12:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN3,PortOf7Seg_1,LOW);
     e16:	83 e0       	ldi	r24, 0x03	; 3
     e18:	63 e0       	ldi	r22, 0x03	; 3
     e1a:	40 e0       	ldi	r20, 0x00	; 0
     e1c:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN4,PortOf7Seg_1,LOW);
     e20:	84 e0       	ldi	r24, 0x04	; 4
     e22:	63 e0       	ldi	r22, 0x03	; 3
     e24:	40 e0       	ldi	r20, 0x00	; 0
     e26:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN6,PortOf7Seg_1,LOW);
     e2a:	86 e0       	ldi	r24, 0x06	; 6
     e2c:	63 e0       	ldi	r22, 0x03	; 3
     e2e:	40 e0       	ldi	r20, 0x00	; 0
     e30:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
     e34:	bc c0       	rjmp	.+376    	; 0xfae <Display_Number+0x2ca>
				break;
			case 3:
				SetPortValue(PortOf7Seg_1,HIGH);
     e36:	83 e0       	ldi	r24, 0x03	; 3
     e38:	61 e0       	ldi	r22, 0x01	; 1
     e3a:	0e 94 55 0b 	call	0x16aa	; 0x16aa <SetPortValue>
				SetPinValue(PIN0,PortOf7Seg_1,LOW);
     e3e:	80 e0       	ldi	r24, 0x00	; 0
     e40:	63 e0       	ldi	r22, 0x03	; 3
     e42:	40 e0       	ldi	r20, 0x00	; 0
     e44:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN1,PortOf7Seg_1,LOW);
     e48:	81 e0       	ldi	r24, 0x01	; 1
     e4a:	63 e0       	ldi	r22, 0x03	; 3
     e4c:	40 e0       	ldi	r20, 0x00	; 0
     e4e:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN2,PortOf7Seg_1,LOW);
     e52:	82 e0       	ldi	r24, 0x02	; 2
     e54:	63 e0       	ldi	r22, 0x03	; 3
     e56:	40 e0       	ldi	r20, 0x00	; 0
     e58:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN3,PortOf7Seg_1,LOW);
     e5c:	83 e0       	ldi	r24, 0x03	; 3
     e5e:	63 e0       	ldi	r22, 0x03	; 3
     e60:	40 e0       	ldi	r20, 0x00	; 0
     e62:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN6,PortOf7Seg_1,LOW);
     e66:	86 e0       	ldi	r24, 0x06	; 6
     e68:	63 e0       	ldi	r22, 0x03	; 3
     e6a:	40 e0       	ldi	r20, 0x00	; 0
     e6c:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
     e70:	9e c0       	rjmp	.+316    	; 0xfae <Display_Number+0x2ca>
				break;
			case 4:
				SetPortValue(PortOf7Seg_1,HIGH);
     e72:	83 e0       	ldi	r24, 0x03	; 3
     e74:	61 e0       	ldi	r22, 0x01	; 1
     e76:	0e 94 55 0b 	call	0x16aa	; 0x16aa <SetPortValue>
				SetPinValue(PIN1,PortOf7Seg_1,LOW);
     e7a:	81 e0       	ldi	r24, 0x01	; 1
     e7c:	63 e0       	ldi	r22, 0x03	; 3
     e7e:	40 e0       	ldi	r20, 0x00	; 0
     e80:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN2,PortOf7Seg_1,LOW);
     e84:	82 e0       	ldi	r24, 0x02	; 2
     e86:	63 e0       	ldi	r22, 0x03	; 3
     e88:	40 e0       	ldi	r20, 0x00	; 0
     e8a:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN5,PortOf7Seg_1,LOW);
     e8e:	85 e0       	ldi	r24, 0x05	; 5
     e90:	63 e0       	ldi	r22, 0x03	; 3
     e92:	40 e0       	ldi	r20, 0x00	; 0
     e94:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN6,PortOf7Seg_1,LOW);
     e98:	86 e0       	ldi	r24, 0x06	; 6
     e9a:	63 e0       	ldi	r22, 0x03	; 3
     e9c:	40 e0       	ldi	r20, 0x00	; 0
     e9e:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
     ea2:	85 c0       	rjmp	.+266    	; 0xfae <Display_Number+0x2ca>
				break;
			case 5:
				SetPortValue(PortOf7Seg_1,HIGH);
     ea4:	83 e0       	ldi	r24, 0x03	; 3
     ea6:	61 e0       	ldi	r22, 0x01	; 1
     ea8:	0e 94 55 0b 	call	0x16aa	; 0x16aa <SetPortValue>
				SetPinValue(PIN0,PortOf7Seg_1,LOW);
     eac:	80 e0       	ldi	r24, 0x00	; 0
     eae:	63 e0       	ldi	r22, 0x03	; 3
     eb0:	40 e0       	ldi	r20, 0x00	; 0
     eb2:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN2,PortOf7Seg_1,LOW);
     eb6:	82 e0       	ldi	r24, 0x02	; 2
     eb8:	63 e0       	ldi	r22, 0x03	; 3
     eba:	40 e0       	ldi	r20, 0x00	; 0
     ebc:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN3,PortOf7Seg_1,LOW);
     ec0:	83 e0       	ldi	r24, 0x03	; 3
     ec2:	63 e0       	ldi	r22, 0x03	; 3
     ec4:	40 e0       	ldi	r20, 0x00	; 0
     ec6:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN5,PortOf7Seg_1,LOW);
     eca:	85 e0       	ldi	r24, 0x05	; 5
     ecc:	63 e0       	ldi	r22, 0x03	; 3
     ece:	40 e0       	ldi	r20, 0x00	; 0
     ed0:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN6,PortOf7Seg_1,LOW);
     ed4:	86 e0       	ldi	r24, 0x06	; 6
     ed6:	63 e0       	ldi	r22, 0x03	; 3
     ed8:	40 e0       	ldi	r20, 0x00	; 0
     eda:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
     ede:	67 c0       	rjmp	.+206    	; 0xfae <Display_Number+0x2ca>
				break;
			case 6:
				SetPortValue(PortOf7Seg_1,HIGH);
     ee0:	83 e0       	ldi	r24, 0x03	; 3
     ee2:	61 e0       	ldi	r22, 0x01	; 1
     ee4:	0e 94 55 0b 	call	0x16aa	; 0x16aa <SetPortValue>
				SetPinValue(PIN0,PortOf7Seg_1,LOW);
     ee8:	80 e0       	ldi	r24, 0x00	; 0
     eea:	63 e0       	ldi	r22, 0x03	; 3
     eec:	40 e0       	ldi	r20, 0x00	; 0
     eee:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN2,PortOf7Seg_1,LOW);
     ef2:	82 e0       	ldi	r24, 0x02	; 2
     ef4:	63 e0       	ldi	r22, 0x03	; 3
     ef6:	40 e0       	ldi	r20, 0x00	; 0
     ef8:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN3,PortOf7Seg_1,LOW);
     efc:	83 e0       	ldi	r24, 0x03	; 3
     efe:	63 e0       	ldi	r22, 0x03	; 3
     f00:	40 e0       	ldi	r20, 0x00	; 0
     f02:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN4,PortOf7Seg_1,LOW);
     f06:	84 e0       	ldi	r24, 0x04	; 4
     f08:	63 e0       	ldi	r22, 0x03	; 3
     f0a:	40 e0       	ldi	r20, 0x00	; 0
     f0c:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN5,PortOf7Seg_1,LOW);
     f10:	85 e0       	ldi	r24, 0x05	; 5
     f12:	63 e0       	ldi	r22, 0x03	; 3
     f14:	40 e0       	ldi	r20, 0x00	; 0
     f16:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN6,PortOf7Seg_1,LOW);
     f1a:	86 e0       	ldi	r24, 0x06	; 6
     f1c:	63 e0       	ldi	r22, 0x03	; 3
     f1e:	40 e0       	ldi	r20, 0x00	; 0
     f20:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
     f24:	44 c0       	rjmp	.+136    	; 0xfae <Display_Number+0x2ca>
				break;
			case 7:
				SetPortValue(PortOf7Seg_1,HIGH);
     f26:	83 e0       	ldi	r24, 0x03	; 3
     f28:	61 e0       	ldi	r22, 0x01	; 1
     f2a:	0e 94 55 0b 	call	0x16aa	; 0x16aa <SetPortValue>
				SetPinValue(PIN0,PortOf7Seg_1,LOW);
     f2e:	80 e0       	ldi	r24, 0x00	; 0
     f30:	63 e0       	ldi	r22, 0x03	; 3
     f32:	40 e0       	ldi	r20, 0x00	; 0
     f34:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN1,PortOf7Seg_1,LOW);
     f38:	81 e0       	ldi	r24, 0x01	; 1
     f3a:	63 e0       	ldi	r22, 0x03	; 3
     f3c:	40 e0       	ldi	r20, 0x00	; 0
     f3e:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN2,PortOf7Seg_1,LOW);
     f42:	82 e0       	ldi	r24, 0x02	; 2
     f44:	63 e0       	ldi	r22, 0x03	; 3
     f46:	40 e0       	ldi	r20, 0x00	; 0
     f48:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
     f4c:	30 c0       	rjmp	.+96     	; 0xfae <Display_Number+0x2ca>
				break;
			case 8:
				SetPortValue(PortOf7Seg_1,HIGH);
     f4e:	83 e0       	ldi	r24, 0x03	; 3
     f50:	61 e0       	ldi	r22, 0x01	; 1
     f52:	0e 94 55 0b 	call	0x16aa	; 0x16aa <SetPortValue>
				SetPortValue(PortOf7Seg_1,LOW);
     f56:	83 e0       	ldi	r24, 0x03	; 3
     f58:	60 e0       	ldi	r22, 0x00	; 0
     f5a:	0e 94 55 0b 	call	0x16aa	; 0x16aa <SetPortValue>
     f5e:	27 c0       	rjmp	.+78     	; 0xfae <Display_Number+0x2ca>
				break;
			case 9:
				SetPortValue(PortOf7Seg_1,HIGH);
     f60:	83 e0       	ldi	r24, 0x03	; 3
     f62:	61 e0       	ldi	r22, 0x01	; 1
     f64:	0e 94 55 0b 	call	0x16aa	; 0x16aa <SetPortValue>
				SetPinValue(PIN0,PortOf7Seg_1,LOW);
     f68:	80 e0       	ldi	r24, 0x00	; 0
     f6a:	63 e0       	ldi	r22, 0x03	; 3
     f6c:	40 e0       	ldi	r20, 0x00	; 0
     f6e:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN1,PortOf7Seg_1,LOW);
     f72:	81 e0       	ldi	r24, 0x01	; 1
     f74:	63 e0       	ldi	r22, 0x03	; 3
     f76:	40 e0       	ldi	r20, 0x00	; 0
     f78:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN2,PortOf7Seg_1,LOW);
     f7c:	82 e0       	ldi	r24, 0x02	; 2
     f7e:	63 e0       	ldi	r22, 0x03	; 3
     f80:	40 e0       	ldi	r20, 0x00	; 0
     f82:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN3,PortOf7Seg_1,LOW);
     f86:	83 e0       	ldi	r24, 0x03	; 3
     f88:	63 e0       	ldi	r22, 0x03	; 3
     f8a:	40 e0       	ldi	r20, 0x00	; 0
     f8c:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN5,PortOf7Seg_1,LOW);
     f90:	85 e0       	ldi	r24, 0x05	; 5
     f92:	63 e0       	ldi	r22, 0x03	; 3
     f94:	40 e0       	ldi	r20, 0x00	; 0
     f96:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
				SetPinValue(PIN6,PortOf7Seg_1,LOW);
     f9a:	86 e0       	ldi	r24, 0x06	; 6
     f9c:	63 e0       	ldi	r22, 0x03	; 3
     f9e:	40 e0       	ldi	r20, 0x00	; 0
     fa0:	0e 94 45 09 	call	0x128a	; 0x128a <SetPinValue>
     fa4:	04 c0       	rjmp	.+8      	; 0xfae <Display_Number+0x2ca>
				break;
			default:SetPortValue(PortOf7Seg_1,HIGH);break;
     fa6:	83 e0       	ldi	r24, 0x03	; 3
     fa8:	61 e0       	ldi	r22, 0x01	; 1
     faa:	0e 94 55 0b 	call	0x16aa	; 0x16aa <SetPortValue>
			}
}
     fae:	0f 90       	pop	r0
     fb0:	0f 90       	pop	r0
     fb2:	0f 90       	pop	r0
     fb4:	cf 91       	pop	r28
     fb6:	df 91       	pop	r29
     fb8:	08 95       	ret

00000fba <Count_Down>:


void Count_Down(u8 start,u8 end,u8 time)
{
     fba:	df 93       	push	r29
     fbc:	cf 93       	push	r28
     fbe:	cd b7       	in	r28, 0x3d	; 61
     fc0:	de b7       	in	r29, 0x3e	; 62
     fc2:	63 97       	sbiw	r28, 0x13	; 19
     fc4:	0f b6       	in	r0, 0x3f	; 63
     fc6:	f8 94       	cli
     fc8:	de bf       	out	0x3e, r29	; 62
     fca:	0f be       	out	0x3f, r0	; 63
     fcc:	cd bf       	out	0x3d, r28	; 61
     fce:	89 8b       	std	Y+17, r24	; 0x11
     fd0:	6a 8b       	std	Y+18, r22	; 0x12
     fd2:	4b 8b       	std	Y+19, r20	; 0x13
	if(start >= 0 && end <= 9 && start < end)
     fd4:	8a 89       	ldd	r24, Y+18	; 0x12
     fd6:	8a 30       	cpi	r24, 0x0A	; 10
     fd8:	08 f0       	brcs	.+2      	; 0xfdc <Count_Down+0x22>
     fda:	96 c0       	rjmp	.+300    	; 0x1108 <Count_Down+0x14e>
     fdc:	99 89       	ldd	r25, Y+17	; 0x11
     fde:	8a 89       	ldd	r24, Y+18	; 0x12
     fe0:	98 17       	cp	r25, r24
     fe2:	08 f0       	brcs	.+2      	; 0xfe6 <Count_Down+0x2c>
     fe4:	91 c0       	rjmp	.+290    	; 0x1108 <Count_Down+0x14e>
	{
		for(int i=end;i>=start;i--)
     fe6:	8a 89       	ldd	r24, Y+18	; 0x12
     fe8:	88 2f       	mov	r24, r24
     fea:	90 e0       	ldi	r25, 0x00	; 0
     fec:	98 8b       	std	Y+16, r25	; 0x10
     fee:	8f 87       	std	Y+15, r24	; 0x0f
     ff0:	81 c0       	rjmp	.+258    	; 0x10f4 <Count_Down+0x13a>
		{
			Display_Number(i);
     ff2:	8f 85       	ldd	r24, Y+15	; 0x0f
     ff4:	0e 94 72 06 	call	0xce4	; 0xce4 <Display_Number>
			_delay_ms(time);
     ff8:	8b 89       	ldd	r24, Y+19	; 0x13
     ffa:	88 2f       	mov	r24, r24
     ffc:	90 e0       	ldi	r25, 0x00	; 0
     ffe:	a0 e0       	ldi	r26, 0x00	; 0
    1000:	b0 e0       	ldi	r27, 0x00	; 0
    1002:	bc 01       	movw	r22, r24
    1004:	cd 01       	movw	r24, r26
    1006:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    100a:	dc 01       	movw	r26, r24
    100c:	cb 01       	movw	r24, r22
    100e:	8b 87       	std	Y+11, r24	; 0x0b
    1010:	9c 87       	std	Y+12, r25	; 0x0c
    1012:	ad 87       	std	Y+13, r26	; 0x0d
    1014:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1016:	6b 85       	ldd	r22, Y+11	; 0x0b
    1018:	7c 85       	ldd	r23, Y+12	; 0x0c
    101a:	8d 85       	ldd	r24, Y+13	; 0x0d
    101c:	9e 85       	ldd	r25, Y+14	; 0x0e
    101e:	20 e0       	ldi	r18, 0x00	; 0
    1020:	30 e0       	ldi	r19, 0x00	; 0
    1022:	4a ef       	ldi	r20, 0xFA	; 250
    1024:	54 e4       	ldi	r21, 0x44	; 68
    1026:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    102a:	dc 01       	movw	r26, r24
    102c:	cb 01       	movw	r24, r22
    102e:	8f 83       	std	Y+7, r24	; 0x07
    1030:	98 87       	std	Y+8, r25	; 0x08
    1032:	a9 87       	std	Y+9, r26	; 0x09
    1034:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1036:	6f 81       	ldd	r22, Y+7	; 0x07
    1038:	78 85       	ldd	r23, Y+8	; 0x08
    103a:	89 85       	ldd	r24, Y+9	; 0x09
    103c:	9a 85       	ldd	r25, Y+10	; 0x0a
    103e:	20 e0       	ldi	r18, 0x00	; 0
    1040:	30 e0       	ldi	r19, 0x00	; 0
    1042:	40 e8       	ldi	r20, 0x80	; 128
    1044:	5f e3       	ldi	r21, 0x3F	; 63
    1046:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    104a:	88 23       	and	r24, r24
    104c:	2c f4       	brge	.+10     	; 0x1058 <Count_Down+0x9e>
		__ticks = 1;
    104e:	81 e0       	ldi	r24, 0x01	; 1
    1050:	90 e0       	ldi	r25, 0x00	; 0
    1052:	9e 83       	std	Y+6, r25	; 0x06
    1054:	8d 83       	std	Y+5, r24	; 0x05
    1056:	3f c0       	rjmp	.+126    	; 0x10d6 <Count_Down+0x11c>
	else if (__tmp > 65535)
    1058:	6f 81       	ldd	r22, Y+7	; 0x07
    105a:	78 85       	ldd	r23, Y+8	; 0x08
    105c:	89 85       	ldd	r24, Y+9	; 0x09
    105e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1060:	20 e0       	ldi	r18, 0x00	; 0
    1062:	3f ef       	ldi	r19, 0xFF	; 255
    1064:	4f e7       	ldi	r20, 0x7F	; 127
    1066:	57 e4       	ldi	r21, 0x47	; 71
    1068:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    106c:	18 16       	cp	r1, r24
    106e:	4c f5       	brge	.+82     	; 0x10c2 <Count_Down+0x108>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1070:	6b 85       	ldd	r22, Y+11	; 0x0b
    1072:	7c 85       	ldd	r23, Y+12	; 0x0c
    1074:	8d 85       	ldd	r24, Y+13	; 0x0d
    1076:	9e 85       	ldd	r25, Y+14	; 0x0e
    1078:	20 e0       	ldi	r18, 0x00	; 0
    107a:	30 e0       	ldi	r19, 0x00	; 0
    107c:	40 e2       	ldi	r20, 0x20	; 32
    107e:	51 e4       	ldi	r21, 0x41	; 65
    1080:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1084:	dc 01       	movw	r26, r24
    1086:	cb 01       	movw	r24, r22
    1088:	bc 01       	movw	r22, r24
    108a:	cd 01       	movw	r24, r26
    108c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1090:	dc 01       	movw	r26, r24
    1092:	cb 01       	movw	r24, r22
    1094:	9e 83       	std	Y+6, r25	; 0x06
    1096:	8d 83       	std	Y+5, r24	; 0x05
    1098:	0f c0       	rjmp	.+30     	; 0x10b8 <Count_Down+0xfe>
    109a:	88 ec       	ldi	r24, 0xC8	; 200
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	9c 83       	std	Y+4, r25	; 0x04
    10a0:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    10a2:	8b 81       	ldd	r24, Y+3	; 0x03
    10a4:	9c 81       	ldd	r25, Y+4	; 0x04
    10a6:	01 97       	sbiw	r24, 0x01	; 1
    10a8:	f1 f7       	brne	.-4      	; 0x10a6 <Count_Down+0xec>
    10aa:	9c 83       	std	Y+4, r25	; 0x04
    10ac:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10ae:	8d 81       	ldd	r24, Y+5	; 0x05
    10b0:	9e 81       	ldd	r25, Y+6	; 0x06
    10b2:	01 97       	sbiw	r24, 0x01	; 1
    10b4:	9e 83       	std	Y+6, r25	; 0x06
    10b6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10b8:	8d 81       	ldd	r24, Y+5	; 0x05
    10ba:	9e 81       	ldd	r25, Y+6	; 0x06
    10bc:	00 97       	sbiw	r24, 0x00	; 0
    10be:	69 f7       	brne	.-38     	; 0x109a <Count_Down+0xe0>
    10c0:	14 c0       	rjmp	.+40     	; 0x10ea <Count_Down+0x130>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10c2:	6f 81       	ldd	r22, Y+7	; 0x07
    10c4:	78 85       	ldd	r23, Y+8	; 0x08
    10c6:	89 85       	ldd	r24, Y+9	; 0x09
    10c8:	9a 85       	ldd	r25, Y+10	; 0x0a
    10ca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    10ce:	dc 01       	movw	r26, r24
    10d0:	cb 01       	movw	r24, r22
    10d2:	9e 83       	std	Y+6, r25	; 0x06
    10d4:	8d 83       	std	Y+5, r24	; 0x05
    10d6:	8d 81       	ldd	r24, Y+5	; 0x05
    10d8:	9e 81       	ldd	r25, Y+6	; 0x06
    10da:	9a 83       	std	Y+2, r25	; 0x02
    10dc:	89 83       	std	Y+1, r24	; 0x01
    10de:	89 81       	ldd	r24, Y+1	; 0x01
    10e0:	9a 81       	ldd	r25, Y+2	; 0x02
    10e2:	01 97       	sbiw	r24, 0x01	; 1
    10e4:	f1 f7       	brne	.-4      	; 0x10e2 <Count_Down+0x128>
    10e6:	9a 83       	std	Y+2, r25	; 0x02
    10e8:	89 83       	std	Y+1, r24	; 0x01

void Count_Down(u8 start,u8 end,u8 time)
{
	if(start >= 0 && end <= 9 && start < end)
	{
		for(int i=end;i>=start;i--)
    10ea:	8f 85       	ldd	r24, Y+15	; 0x0f
    10ec:	98 89       	ldd	r25, Y+16	; 0x10
    10ee:	01 97       	sbiw	r24, 0x01	; 1
    10f0:	98 8b       	std	Y+16, r25	; 0x10
    10f2:	8f 87       	std	Y+15, r24	; 0x0f
    10f4:	89 89       	ldd	r24, Y+17	; 0x11
    10f6:	28 2f       	mov	r18, r24
    10f8:	30 e0       	ldi	r19, 0x00	; 0
    10fa:	8f 85       	ldd	r24, Y+15	; 0x0f
    10fc:	98 89       	ldd	r25, Y+16	; 0x10
    10fe:	82 17       	cp	r24, r18
    1100:	93 07       	cpc	r25, r19
    1102:	0c f0       	brlt	.+2      	; 0x1106 <Count_Down+0x14c>
    1104:	76 cf       	rjmp	.-276    	; 0xff2 <Count_Down+0x38>
    1106:	04 c0       	rjmp	.+8      	; 0x1110 <Count_Down+0x156>
			_delay_ms(time);
		}
	}
	else
	{
		SetPortValue(PortOf7Seg_1,HIGH);
    1108:	83 e0       	ldi	r24, 0x03	; 3
    110a:	61 e0       	ldi	r22, 0x01	; 1
    110c:	0e 94 55 0b 	call	0x16aa	; 0x16aa <SetPortValue>
	}
}
    1110:	63 96       	adiw	r28, 0x13	; 19
    1112:	0f b6       	in	r0, 0x3f	; 63
    1114:	f8 94       	cli
    1116:	de bf       	out	0x3e, r29	; 62
    1118:	0f be       	out	0x3f, r0	; 63
    111a:	cd bf       	out	0x3d, r28	; 61
    111c:	cf 91       	pop	r28
    111e:	df 91       	pop	r29
    1120:	08 95       	ret

00001122 <Count_Up>:

void Count_Up(u8 start,u8 end,u8 time)
{
    1122:	df 93       	push	r29
    1124:	cf 93       	push	r28
    1126:	cd b7       	in	r28, 0x3d	; 61
    1128:	de b7       	in	r29, 0x3e	; 62
    112a:	63 97       	sbiw	r28, 0x13	; 19
    112c:	0f b6       	in	r0, 0x3f	; 63
    112e:	f8 94       	cli
    1130:	de bf       	out	0x3e, r29	; 62
    1132:	0f be       	out	0x3f, r0	; 63
    1134:	cd bf       	out	0x3d, r28	; 61
    1136:	89 8b       	std	Y+17, r24	; 0x11
    1138:	6a 8b       	std	Y+18, r22	; 0x12
    113a:	4b 8b       	std	Y+19, r20	; 0x13
	if(start >= 0 && end <= 9 && start < end)
    113c:	8a 89       	ldd	r24, Y+18	; 0x12
    113e:	8a 30       	cpi	r24, 0x0A	; 10
    1140:	08 f0       	brcs	.+2      	; 0x1144 <Count_Up+0x22>
    1142:	96 c0       	rjmp	.+300    	; 0x1270 <Count_Up+0x14e>
    1144:	99 89       	ldd	r25, Y+17	; 0x11
    1146:	8a 89       	ldd	r24, Y+18	; 0x12
    1148:	98 17       	cp	r25, r24
    114a:	08 f0       	brcs	.+2      	; 0x114e <Count_Up+0x2c>
    114c:	91 c0       	rjmp	.+290    	; 0x1270 <Count_Up+0x14e>
	{
		for(int i=start;i<=end;i++)
    114e:	89 89       	ldd	r24, Y+17	; 0x11
    1150:	88 2f       	mov	r24, r24
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	98 8b       	std	Y+16, r25	; 0x10
    1156:	8f 87       	std	Y+15, r24	; 0x0f
    1158:	81 c0       	rjmp	.+258    	; 0x125c <Count_Up+0x13a>
		{
			Display_Number(i);
    115a:	8f 85       	ldd	r24, Y+15	; 0x0f
    115c:	0e 94 72 06 	call	0xce4	; 0xce4 <Display_Number>
			_delay_ms(time);
    1160:	8b 89       	ldd	r24, Y+19	; 0x13
    1162:	88 2f       	mov	r24, r24
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	a0 e0       	ldi	r26, 0x00	; 0
    1168:	b0 e0       	ldi	r27, 0x00	; 0
    116a:	bc 01       	movw	r22, r24
    116c:	cd 01       	movw	r24, r26
    116e:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    1172:	dc 01       	movw	r26, r24
    1174:	cb 01       	movw	r24, r22
    1176:	8b 87       	std	Y+11, r24	; 0x0b
    1178:	9c 87       	std	Y+12, r25	; 0x0c
    117a:	ad 87       	std	Y+13, r26	; 0x0d
    117c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    117e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1180:	7c 85       	ldd	r23, Y+12	; 0x0c
    1182:	8d 85       	ldd	r24, Y+13	; 0x0d
    1184:	9e 85       	ldd	r25, Y+14	; 0x0e
    1186:	20 e0       	ldi	r18, 0x00	; 0
    1188:	30 e0       	ldi	r19, 0x00	; 0
    118a:	4a ef       	ldi	r20, 0xFA	; 250
    118c:	54 e4       	ldi	r21, 0x44	; 68
    118e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1192:	dc 01       	movw	r26, r24
    1194:	cb 01       	movw	r24, r22
    1196:	8f 83       	std	Y+7, r24	; 0x07
    1198:	98 87       	std	Y+8, r25	; 0x08
    119a:	a9 87       	std	Y+9, r26	; 0x09
    119c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    119e:	6f 81       	ldd	r22, Y+7	; 0x07
    11a0:	78 85       	ldd	r23, Y+8	; 0x08
    11a2:	89 85       	ldd	r24, Y+9	; 0x09
    11a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    11a6:	20 e0       	ldi	r18, 0x00	; 0
    11a8:	30 e0       	ldi	r19, 0x00	; 0
    11aa:	40 e8       	ldi	r20, 0x80	; 128
    11ac:	5f e3       	ldi	r21, 0x3F	; 63
    11ae:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    11b2:	88 23       	and	r24, r24
    11b4:	2c f4       	brge	.+10     	; 0x11c0 <Count_Up+0x9e>
		__ticks = 1;
    11b6:	81 e0       	ldi	r24, 0x01	; 1
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	9e 83       	std	Y+6, r25	; 0x06
    11bc:	8d 83       	std	Y+5, r24	; 0x05
    11be:	3f c0       	rjmp	.+126    	; 0x123e <Count_Up+0x11c>
	else if (__tmp > 65535)
    11c0:	6f 81       	ldd	r22, Y+7	; 0x07
    11c2:	78 85       	ldd	r23, Y+8	; 0x08
    11c4:	89 85       	ldd	r24, Y+9	; 0x09
    11c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    11c8:	20 e0       	ldi	r18, 0x00	; 0
    11ca:	3f ef       	ldi	r19, 0xFF	; 255
    11cc:	4f e7       	ldi	r20, 0x7F	; 127
    11ce:	57 e4       	ldi	r21, 0x47	; 71
    11d0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    11d4:	18 16       	cp	r1, r24
    11d6:	4c f5       	brge	.+82     	; 0x122a <Count_Up+0x108>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11d8:	6b 85       	ldd	r22, Y+11	; 0x0b
    11da:	7c 85       	ldd	r23, Y+12	; 0x0c
    11dc:	8d 85       	ldd	r24, Y+13	; 0x0d
    11de:	9e 85       	ldd	r25, Y+14	; 0x0e
    11e0:	20 e0       	ldi	r18, 0x00	; 0
    11e2:	30 e0       	ldi	r19, 0x00	; 0
    11e4:	40 e2       	ldi	r20, 0x20	; 32
    11e6:	51 e4       	ldi	r21, 0x41	; 65
    11e8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11ec:	dc 01       	movw	r26, r24
    11ee:	cb 01       	movw	r24, r22
    11f0:	bc 01       	movw	r22, r24
    11f2:	cd 01       	movw	r24, r26
    11f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    11f8:	dc 01       	movw	r26, r24
    11fa:	cb 01       	movw	r24, r22
    11fc:	9e 83       	std	Y+6, r25	; 0x06
    11fe:	8d 83       	std	Y+5, r24	; 0x05
    1200:	0f c0       	rjmp	.+30     	; 0x1220 <Count_Up+0xfe>
    1202:	88 ec       	ldi	r24, 0xC8	; 200
    1204:	90 e0       	ldi	r25, 0x00	; 0
    1206:	9c 83       	std	Y+4, r25	; 0x04
    1208:	8b 83       	std	Y+3, r24	; 0x03
    120a:	8b 81       	ldd	r24, Y+3	; 0x03
    120c:	9c 81       	ldd	r25, Y+4	; 0x04
    120e:	01 97       	sbiw	r24, 0x01	; 1
    1210:	f1 f7       	brne	.-4      	; 0x120e <Count_Up+0xec>
    1212:	9c 83       	std	Y+4, r25	; 0x04
    1214:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1216:	8d 81       	ldd	r24, Y+5	; 0x05
    1218:	9e 81       	ldd	r25, Y+6	; 0x06
    121a:	01 97       	sbiw	r24, 0x01	; 1
    121c:	9e 83       	std	Y+6, r25	; 0x06
    121e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1220:	8d 81       	ldd	r24, Y+5	; 0x05
    1222:	9e 81       	ldd	r25, Y+6	; 0x06
    1224:	00 97       	sbiw	r24, 0x00	; 0
    1226:	69 f7       	brne	.-38     	; 0x1202 <Count_Up+0xe0>
    1228:	14 c0       	rjmp	.+40     	; 0x1252 <Count_Up+0x130>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    122a:	6f 81       	ldd	r22, Y+7	; 0x07
    122c:	78 85       	ldd	r23, Y+8	; 0x08
    122e:	89 85       	ldd	r24, Y+9	; 0x09
    1230:	9a 85       	ldd	r25, Y+10	; 0x0a
    1232:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1236:	dc 01       	movw	r26, r24
    1238:	cb 01       	movw	r24, r22
    123a:	9e 83       	std	Y+6, r25	; 0x06
    123c:	8d 83       	std	Y+5, r24	; 0x05
    123e:	8d 81       	ldd	r24, Y+5	; 0x05
    1240:	9e 81       	ldd	r25, Y+6	; 0x06
    1242:	9a 83       	std	Y+2, r25	; 0x02
    1244:	89 83       	std	Y+1, r24	; 0x01
    1246:	89 81       	ldd	r24, Y+1	; 0x01
    1248:	9a 81       	ldd	r25, Y+2	; 0x02
    124a:	01 97       	sbiw	r24, 0x01	; 1
    124c:	f1 f7       	brne	.-4      	; 0x124a <Count_Up+0x128>
    124e:	9a 83       	std	Y+2, r25	; 0x02
    1250:	89 83       	std	Y+1, r24	; 0x01

void Count_Up(u8 start,u8 end,u8 time)
{
	if(start >= 0 && end <= 9 && start < end)
	{
		for(int i=start;i<=end;i++)
    1252:	8f 85       	ldd	r24, Y+15	; 0x0f
    1254:	98 89       	ldd	r25, Y+16	; 0x10
    1256:	01 96       	adiw	r24, 0x01	; 1
    1258:	98 8b       	std	Y+16, r25	; 0x10
    125a:	8f 87       	std	Y+15, r24	; 0x0f
    125c:	8a 89       	ldd	r24, Y+18	; 0x12
    125e:	28 2f       	mov	r18, r24
    1260:	30 e0       	ldi	r19, 0x00	; 0
    1262:	8f 85       	ldd	r24, Y+15	; 0x0f
    1264:	98 89       	ldd	r25, Y+16	; 0x10
    1266:	28 17       	cp	r18, r24
    1268:	39 07       	cpc	r19, r25
    126a:	0c f0       	brlt	.+2      	; 0x126e <Count_Up+0x14c>
    126c:	76 cf       	rjmp	.-276    	; 0x115a <Count_Up+0x38>
    126e:	04 c0       	rjmp	.+8      	; 0x1278 <Count_Up+0x156>
			_delay_ms(time);
		}
	}
	else
	{
		SetPortValue(PortOf7Seg_1,HIGH);
    1270:	83 e0       	ldi	r24, 0x03	; 3
    1272:	61 e0       	ldi	r22, 0x01	; 1
    1274:	0e 94 55 0b 	call	0x16aa	; 0x16aa <SetPortValue>
	}
}
    1278:	63 96       	adiw	r28, 0x13	; 19
    127a:	0f b6       	in	r0, 0x3f	; 63
    127c:	f8 94       	cli
    127e:	de bf       	out	0x3e, r29	; 62
    1280:	0f be       	out	0x3f, r0	; 63
    1282:	cd bf       	out	0x3d, r28	; 61
    1284:	cf 91       	pop	r28
    1286:	df 91       	pop	r29
    1288:	08 95       	ret

0000128a <SetPinValue>:
#include"LIB/set_math.h"
#include"DIO.h"
#include"DIO_Registers.h"

void SetPinValue(u8 PinId,u8 PortId,u8 PinValue)
{
    128a:	df 93       	push	r29
    128c:	cf 93       	push	r28
    128e:	cd b7       	in	r28, 0x3d	; 61
    1290:	de b7       	in	r29, 0x3e	; 62
    1292:	27 97       	sbiw	r28, 0x07	; 7
    1294:	0f b6       	in	r0, 0x3f	; 63
    1296:	f8 94       	cli
    1298:	de bf       	out	0x3e, r29	; 62
    129a:	0f be       	out	0x3f, r0	; 63
    129c:	cd bf       	out	0x3d, r28	; 61
    129e:	89 83       	std	Y+1, r24	; 0x01
    12a0:	6a 83       	std	Y+2, r22	; 0x02
    12a2:	4b 83       	std	Y+3, r20	; 0x03
	if(PinId <= PIN7 && PortId <= PORTD)
    12a4:	89 81       	ldd	r24, Y+1	; 0x01
    12a6:	88 30       	cpi	r24, 0x08	; 8
    12a8:	08 f0       	brcs	.+2      	; 0x12ac <SetPinValue+0x22>
    12aa:	ee c0       	rjmp	.+476    	; 0x1488 <SetPinValue+0x1fe>
    12ac:	8a 81       	ldd	r24, Y+2	; 0x02
    12ae:	84 30       	cpi	r24, 0x04	; 4
    12b0:	08 f0       	brcs	.+2      	; 0x12b4 <SetPinValue+0x2a>
    12b2:	ea c0       	rjmp	.+468    	; 0x1488 <SetPinValue+0x1fe>
	{
		if(PinValue == HIGH)
    12b4:	8b 81       	ldd	r24, Y+3	; 0x03
    12b6:	81 30       	cpi	r24, 0x01	; 1
    12b8:	09 f0       	breq	.+2      	; 0x12bc <SetPinValue+0x32>
    12ba:	6f c0       	rjmp	.+222    	; 0x139a <SetPinValue+0x110>
		{
			switch(PortId)
    12bc:	8a 81       	ldd	r24, Y+2	; 0x02
    12be:	28 2f       	mov	r18, r24
    12c0:	30 e0       	ldi	r19, 0x00	; 0
    12c2:	3f 83       	std	Y+7, r19	; 0x07
    12c4:	2e 83       	std	Y+6, r18	; 0x06
    12c6:	8e 81       	ldd	r24, Y+6	; 0x06
    12c8:	9f 81       	ldd	r25, Y+7	; 0x07
    12ca:	81 30       	cpi	r24, 0x01	; 1
    12cc:	91 05       	cpc	r25, r1
    12ce:	49 f1       	breq	.+82     	; 0x1322 <SetPinValue+0x98>
    12d0:	2e 81       	ldd	r18, Y+6	; 0x06
    12d2:	3f 81       	ldd	r19, Y+7	; 0x07
    12d4:	22 30       	cpi	r18, 0x02	; 2
    12d6:	31 05       	cpc	r19, r1
    12d8:	2c f4       	brge	.+10     	; 0x12e4 <SetPinValue+0x5a>
    12da:	8e 81       	ldd	r24, Y+6	; 0x06
    12dc:	9f 81       	ldd	r25, Y+7	; 0x07
    12de:	00 97       	sbiw	r24, 0x00	; 0
    12e0:	61 f0       	breq	.+24     	; 0x12fa <SetPinValue+0x70>
    12e2:	d2 c0       	rjmp	.+420    	; 0x1488 <SetPinValue+0x1fe>
    12e4:	2e 81       	ldd	r18, Y+6	; 0x06
    12e6:	3f 81       	ldd	r19, Y+7	; 0x07
    12e8:	22 30       	cpi	r18, 0x02	; 2
    12ea:	31 05       	cpc	r19, r1
    12ec:	71 f1       	breq	.+92     	; 0x134a <SetPinValue+0xc0>
    12ee:	8e 81       	ldd	r24, Y+6	; 0x06
    12f0:	9f 81       	ldd	r25, Y+7	; 0x07
    12f2:	83 30       	cpi	r24, 0x03	; 3
    12f4:	91 05       	cpc	r25, r1
    12f6:	e9 f1       	breq	.+122    	; 0x1372 <SetPinValue+0xe8>
    12f8:	c7 c0       	rjmp	.+398    	; 0x1488 <SetPinValue+0x1fe>
			{
			case PORTA:	SET_BIT(PORTA_REG,PinId);break;
    12fa:	ab e3       	ldi	r26, 0x3B	; 59
    12fc:	b0 e0       	ldi	r27, 0x00	; 0
    12fe:	eb e3       	ldi	r30, 0x3B	; 59
    1300:	f0 e0       	ldi	r31, 0x00	; 0
    1302:	80 81       	ld	r24, Z
    1304:	48 2f       	mov	r20, r24
    1306:	89 81       	ldd	r24, Y+1	; 0x01
    1308:	28 2f       	mov	r18, r24
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	81 e0       	ldi	r24, 0x01	; 1
    130e:	90 e0       	ldi	r25, 0x00	; 0
    1310:	02 2e       	mov	r0, r18
    1312:	02 c0       	rjmp	.+4      	; 0x1318 <SetPinValue+0x8e>
    1314:	88 0f       	add	r24, r24
    1316:	99 1f       	adc	r25, r25
    1318:	0a 94       	dec	r0
    131a:	e2 f7       	brpl	.-8      	; 0x1314 <SetPinValue+0x8a>
    131c:	84 2b       	or	r24, r20
    131e:	8c 93       	st	X, r24
    1320:	b3 c0       	rjmp	.+358    	; 0x1488 <SetPinValue+0x1fe>
			case PORTB:	SET_BIT(PORTB_REG,PinId);break;
    1322:	a8 e3       	ldi	r26, 0x38	; 56
    1324:	b0 e0       	ldi	r27, 0x00	; 0
    1326:	e8 e3       	ldi	r30, 0x38	; 56
    1328:	f0 e0       	ldi	r31, 0x00	; 0
    132a:	80 81       	ld	r24, Z
    132c:	48 2f       	mov	r20, r24
    132e:	89 81       	ldd	r24, Y+1	; 0x01
    1330:	28 2f       	mov	r18, r24
    1332:	30 e0       	ldi	r19, 0x00	; 0
    1334:	81 e0       	ldi	r24, 0x01	; 1
    1336:	90 e0       	ldi	r25, 0x00	; 0
    1338:	02 2e       	mov	r0, r18
    133a:	02 c0       	rjmp	.+4      	; 0x1340 <SetPinValue+0xb6>
    133c:	88 0f       	add	r24, r24
    133e:	99 1f       	adc	r25, r25
    1340:	0a 94       	dec	r0
    1342:	e2 f7       	brpl	.-8      	; 0x133c <SetPinValue+0xb2>
    1344:	84 2b       	or	r24, r20
    1346:	8c 93       	st	X, r24
    1348:	9f c0       	rjmp	.+318    	; 0x1488 <SetPinValue+0x1fe>
			case PORTC:	SET_BIT(PORTC_REG,PinId);break;
    134a:	a5 e3       	ldi	r26, 0x35	; 53
    134c:	b0 e0       	ldi	r27, 0x00	; 0
    134e:	e5 e3       	ldi	r30, 0x35	; 53
    1350:	f0 e0       	ldi	r31, 0x00	; 0
    1352:	80 81       	ld	r24, Z
    1354:	48 2f       	mov	r20, r24
    1356:	89 81       	ldd	r24, Y+1	; 0x01
    1358:	28 2f       	mov	r18, r24
    135a:	30 e0       	ldi	r19, 0x00	; 0
    135c:	81 e0       	ldi	r24, 0x01	; 1
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	02 2e       	mov	r0, r18
    1362:	02 c0       	rjmp	.+4      	; 0x1368 <SetPinValue+0xde>
    1364:	88 0f       	add	r24, r24
    1366:	99 1f       	adc	r25, r25
    1368:	0a 94       	dec	r0
    136a:	e2 f7       	brpl	.-8      	; 0x1364 <SetPinValue+0xda>
    136c:	84 2b       	or	r24, r20
    136e:	8c 93       	st	X, r24
    1370:	8b c0       	rjmp	.+278    	; 0x1488 <SetPinValue+0x1fe>
			case PORTD:	SET_BIT(PORTD_REG,PinId);break;
    1372:	a2 e3       	ldi	r26, 0x32	; 50
    1374:	b0 e0       	ldi	r27, 0x00	; 0
    1376:	e2 e3       	ldi	r30, 0x32	; 50
    1378:	f0 e0       	ldi	r31, 0x00	; 0
    137a:	80 81       	ld	r24, Z
    137c:	48 2f       	mov	r20, r24
    137e:	89 81       	ldd	r24, Y+1	; 0x01
    1380:	28 2f       	mov	r18, r24
    1382:	30 e0       	ldi	r19, 0x00	; 0
    1384:	81 e0       	ldi	r24, 0x01	; 1
    1386:	90 e0       	ldi	r25, 0x00	; 0
    1388:	02 2e       	mov	r0, r18
    138a:	02 c0       	rjmp	.+4      	; 0x1390 <SetPinValue+0x106>
    138c:	88 0f       	add	r24, r24
    138e:	99 1f       	adc	r25, r25
    1390:	0a 94       	dec	r0
    1392:	e2 f7       	brpl	.-8      	; 0x138c <SetPinValue+0x102>
    1394:	84 2b       	or	r24, r20
    1396:	8c 93       	st	X, r24
    1398:	77 c0       	rjmp	.+238    	; 0x1488 <SetPinValue+0x1fe>
			}
		}
		else if(PinValue == LOW)
    139a:	8b 81       	ldd	r24, Y+3	; 0x03
    139c:	88 23       	and	r24, r24
    139e:	09 f0       	breq	.+2      	; 0x13a2 <SetPinValue+0x118>
    13a0:	73 c0       	rjmp	.+230    	; 0x1488 <SetPinValue+0x1fe>
		{
			switch(PortId)
    13a2:	8a 81       	ldd	r24, Y+2	; 0x02
    13a4:	28 2f       	mov	r18, r24
    13a6:	30 e0       	ldi	r19, 0x00	; 0
    13a8:	3d 83       	std	Y+5, r19	; 0x05
    13aa:	2c 83       	std	Y+4, r18	; 0x04
    13ac:	8c 81       	ldd	r24, Y+4	; 0x04
    13ae:	9d 81       	ldd	r25, Y+5	; 0x05
    13b0:	81 30       	cpi	r24, 0x01	; 1
    13b2:	91 05       	cpc	r25, r1
    13b4:	59 f1       	breq	.+86     	; 0x140c <SetPinValue+0x182>
    13b6:	2c 81       	ldd	r18, Y+4	; 0x04
    13b8:	3d 81       	ldd	r19, Y+5	; 0x05
    13ba:	22 30       	cpi	r18, 0x02	; 2
    13bc:	31 05       	cpc	r19, r1
    13be:	2c f4       	brge	.+10     	; 0x13ca <SetPinValue+0x140>
    13c0:	8c 81       	ldd	r24, Y+4	; 0x04
    13c2:	9d 81       	ldd	r25, Y+5	; 0x05
    13c4:	00 97       	sbiw	r24, 0x00	; 0
    13c6:	69 f0       	breq	.+26     	; 0x13e2 <SetPinValue+0x158>
    13c8:	5f c0       	rjmp	.+190    	; 0x1488 <SetPinValue+0x1fe>
    13ca:	2c 81       	ldd	r18, Y+4	; 0x04
    13cc:	3d 81       	ldd	r19, Y+5	; 0x05
    13ce:	22 30       	cpi	r18, 0x02	; 2
    13d0:	31 05       	cpc	r19, r1
    13d2:	89 f1       	breq	.+98     	; 0x1436 <SetPinValue+0x1ac>
    13d4:	8c 81       	ldd	r24, Y+4	; 0x04
    13d6:	9d 81       	ldd	r25, Y+5	; 0x05
    13d8:	83 30       	cpi	r24, 0x03	; 3
    13da:	91 05       	cpc	r25, r1
    13dc:	09 f4       	brne	.+2      	; 0x13e0 <SetPinValue+0x156>
    13de:	40 c0       	rjmp	.+128    	; 0x1460 <SetPinValue+0x1d6>
    13e0:	53 c0       	rjmp	.+166    	; 0x1488 <SetPinValue+0x1fe>
			{
			case PORTA:	CLR_BIT(PORTA_REG,PinId);break;
    13e2:	ab e3       	ldi	r26, 0x3B	; 59
    13e4:	b0 e0       	ldi	r27, 0x00	; 0
    13e6:	eb e3       	ldi	r30, 0x3B	; 59
    13e8:	f0 e0       	ldi	r31, 0x00	; 0
    13ea:	80 81       	ld	r24, Z
    13ec:	48 2f       	mov	r20, r24
    13ee:	89 81       	ldd	r24, Y+1	; 0x01
    13f0:	28 2f       	mov	r18, r24
    13f2:	30 e0       	ldi	r19, 0x00	; 0
    13f4:	81 e0       	ldi	r24, 0x01	; 1
    13f6:	90 e0       	ldi	r25, 0x00	; 0
    13f8:	02 2e       	mov	r0, r18
    13fa:	02 c0       	rjmp	.+4      	; 0x1400 <SetPinValue+0x176>
    13fc:	88 0f       	add	r24, r24
    13fe:	99 1f       	adc	r25, r25
    1400:	0a 94       	dec	r0
    1402:	e2 f7       	brpl	.-8      	; 0x13fc <SetPinValue+0x172>
    1404:	80 95       	com	r24
    1406:	84 23       	and	r24, r20
    1408:	8c 93       	st	X, r24
    140a:	3e c0       	rjmp	.+124    	; 0x1488 <SetPinValue+0x1fe>
			case PORTB:	CLR_BIT(PORTB_REG,PinId);break;
    140c:	a8 e3       	ldi	r26, 0x38	; 56
    140e:	b0 e0       	ldi	r27, 0x00	; 0
    1410:	e8 e3       	ldi	r30, 0x38	; 56
    1412:	f0 e0       	ldi	r31, 0x00	; 0
    1414:	80 81       	ld	r24, Z
    1416:	48 2f       	mov	r20, r24
    1418:	89 81       	ldd	r24, Y+1	; 0x01
    141a:	28 2f       	mov	r18, r24
    141c:	30 e0       	ldi	r19, 0x00	; 0
    141e:	81 e0       	ldi	r24, 0x01	; 1
    1420:	90 e0       	ldi	r25, 0x00	; 0
    1422:	02 2e       	mov	r0, r18
    1424:	02 c0       	rjmp	.+4      	; 0x142a <SetPinValue+0x1a0>
    1426:	88 0f       	add	r24, r24
    1428:	99 1f       	adc	r25, r25
    142a:	0a 94       	dec	r0
    142c:	e2 f7       	brpl	.-8      	; 0x1426 <SetPinValue+0x19c>
    142e:	80 95       	com	r24
    1430:	84 23       	and	r24, r20
    1432:	8c 93       	st	X, r24
    1434:	29 c0       	rjmp	.+82     	; 0x1488 <SetPinValue+0x1fe>
			case PORTC:	CLR_BIT(PORTC_REG,PinId);break;
    1436:	a5 e3       	ldi	r26, 0x35	; 53
    1438:	b0 e0       	ldi	r27, 0x00	; 0
    143a:	e5 e3       	ldi	r30, 0x35	; 53
    143c:	f0 e0       	ldi	r31, 0x00	; 0
    143e:	80 81       	ld	r24, Z
    1440:	48 2f       	mov	r20, r24
    1442:	89 81       	ldd	r24, Y+1	; 0x01
    1444:	28 2f       	mov	r18, r24
    1446:	30 e0       	ldi	r19, 0x00	; 0
    1448:	81 e0       	ldi	r24, 0x01	; 1
    144a:	90 e0       	ldi	r25, 0x00	; 0
    144c:	02 2e       	mov	r0, r18
    144e:	02 c0       	rjmp	.+4      	; 0x1454 <SetPinValue+0x1ca>
    1450:	88 0f       	add	r24, r24
    1452:	99 1f       	adc	r25, r25
    1454:	0a 94       	dec	r0
    1456:	e2 f7       	brpl	.-8      	; 0x1450 <SetPinValue+0x1c6>
    1458:	80 95       	com	r24
    145a:	84 23       	and	r24, r20
    145c:	8c 93       	st	X, r24
    145e:	14 c0       	rjmp	.+40     	; 0x1488 <SetPinValue+0x1fe>
			case PORTD:	CLR_BIT(PORTD_REG,PinId);break;
    1460:	a2 e3       	ldi	r26, 0x32	; 50
    1462:	b0 e0       	ldi	r27, 0x00	; 0
    1464:	e2 e3       	ldi	r30, 0x32	; 50
    1466:	f0 e0       	ldi	r31, 0x00	; 0
    1468:	80 81       	ld	r24, Z
    146a:	48 2f       	mov	r20, r24
    146c:	89 81       	ldd	r24, Y+1	; 0x01
    146e:	28 2f       	mov	r18, r24
    1470:	30 e0       	ldi	r19, 0x00	; 0
    1472:	81 e0       	ldi	r24, 0x01	; 1
    1474:	90 e0       	ldi	r25, 0x00	; 0
    1476:	02 2e       	mov	r0, r18
    1478:	02 c0       	rjmp	.+4      	; 0x147e <SetPinValue+0x1f4>
    147a:	88 0f       	add	r24, r24
    147c:	99 1f       	adc	r25, r25
    147e:	0a 94       	dec	r0
    1480:	e2 f7       	brpl	.-8      	; 0x147a <SetPinValue+0x1f0>
    1482:	80 95       	com	r24
    1484:	84 23       	and	r24, r20
    1486:	8c 93       	st	X, r24

	else
	{
		//report error massage
	}
}
    1488:	27 96       	adiw	r28, 0x07	; 7
    148a:	0f b6       	in	r0, 0x3f	; 63
    148c:	f8 94       	cli
    148e:	de bf       	out	0x3e, r29	; 62
    1490:	0f be       	out	0x3f, r0	; 63
    1492:	cd bf       	out	0x3d, r28	; 61
    1494:	cf 91       	pop	r28
    1496:	df 91       	pop	r29
    1498:	08 95       	ret

0000149a <SetPinMode>:

void SetPinMode(u8 PinId,u8 PortId,u8 PinMode)
{
    149a:	df 93       	push	r29
    149c:	cf 93       	push	r28
    149e:	cd b7       	in	r28, 0x3d	; 61
    14a0:	de b7       	in	r29, 0x3e	; 62
    14a2:	27 97       	sbiw	r28, 0x07	; 7
    14a4:	0f b6       	in	r0, 0x3f	; 63
    14a6:	f8 94       	cli
    14a8:	de bf       	out	0x3e, r29	; 62
    14aa:	0f be       	out	0x3f, r0	; 63
    14ac:	cd bf       	out	0x3d, r28	; 61
    14ae:	89 83       	std	Y+1, r24	; 0x01
    14b0:	6a 83       	std	Y+2, r22	; 0x02
    14b2:	4b 83       	std	Y+3, r20	; 0x03
	if(PinId <= PIN7 && PortId <= PORTD)
    14b4:	89 81       	ldd	r24, Y+1	; 0x01
    14b6:	88 30       	cpi	r24, 0x08	; 8
    14b8:	08 f0       	brcs	.+2      	; 0x14bc <SetPinMode+0x22>
    14ba:	ee c0       	rjmp	.+476    	; 0x1698 <SetPinMode+0x1fe>
    14bc:	8a 81       	ldd	r24, Y+2	; 0x02
    14be:	84 30       	cpi	r24, 0x04	; 4
    14c0:	08 f0       	brcs	.+2      	; 0x14c4 <SetPinMode+0x2a>
    14c2:	ea c0       	rjmp	.+468    	; 0x1698 <SetPinMode+0x1fe>
	{
		if(PinMode == OUTPUT)
    14c4:	8b 81       	ldd	r24, Y+3	; 0x03
    14c6:	81 30       	cpi	r24, 0x01	; 1
    14c8:	09 f0       	breq	.+2      	; 0x14cc <SetPinMode+0x32>
    14ca:	6f c0       	rjmp	.+222    	; 0x15aa <SetPinMode+0x110>
		{
			switch(PortId)
    14cc:	8a 81       	ldd	r24, Y+2	; 0x02
    14ce:	28 2f       	mov	r18, r24
    14d0:	30 e0       	ldi	r19, 0x00	; 0
    14d2:	3f 83       	std	Y+7, r19	; 0x07
    14d4:	2e 83       	std	Y+6, r18	; 0x06
    14d6:	8e 81       	ldd	r24, Y+6	; 0x06
    14d8:	9f 81       	ldd	r25, Y+7	; 0x07
    14da:	81 30       	cpi	r24, 0x01	; 1
    14dc:	91 05       	cpc	r25, r1
    14de:	49 f1       	breq	.+82     	; 0x1532 <SetPinMode+0x98>
    14e0:	2e 81       	ldd	r18, Y+6	; 0x06
    14e2:	3f 81       	ldd	r19, Y+7	; 0x07
    14e4:	22 30       	cpi	r18, 0x02	; 2
    14e6:	31 05       	cpc	r19, r1
    14e8:	2c f4       	brge	.+10     	; 0x14f4 <SetPinMode+0x5a>
    14ea:	8e 81       	ldd	r24, Y+6	; 0x06
    14ec:	9f 81       	ldd	r25, Y+7	; 0x07
    14ee:	00 97       	sbiw	r24, 0x00	; 0
    14f0:	61 f0       	breq	.+24     	; 0x150a <SetPinMode+0x70>
    14f2:	d2 c0       	rjmp	.+420    	; 0x1698 <SetPinMode+0x1fe>
    14f4:	2e 81       	ldd	r18, Y+6	; 0x06
    14f6:	3f 81       	ldd	r19, Y+7	; 0x07
    14f8:	22 30       	cpi	r18, 0x02	; 2
    14fa:	31 05       	cpc	r19, r1
    14fc:	71 f1       	breq	.+92     	; 0x155a <SetPinMode+0xc0>
    14fe:	8e 81       	ldd	r24, Y+6	; 0x06
    1500:	9f 81       	ldd	r25, Y+7	; 0x07
    1502:	83 30       	cpi	r24, 0x03	; 3
    1504:	91 05       	cpc	r25, r1
    1506:	e9 f1       	breq	.+122    	; 0x1582 <SetPinMode+0xe8>
    1508:	c7 c0       	rjmp	.+398    	; 0x1698 <SetPinMode+0x1fe>
			{
			case PORTA:	SET_BIT(DDRA_REG,PinId);break;
    150a:	aa e3       	ldi	r26, 0x3A	; 58
    150c:	b0 e0       	ldi	r27, 0x00	; 0
    150e:	ea e3       	ldi	r30, 0x3A	; 58
    1510:	f0 e0       	ldi	r31, 0x00	; 0
    1512:	80 81       	ld	r24, Z
    1514:	48 2f       	mov	r20, r24
    1516:	89 81       	ldd	r24, Y+1	; 0x01
    1518:	28 2f       	mov	r18, r24
    151a:	30 e0       	ldi	r19, 0x00	; 0
    151c:	81 e0       	ldi	r24, 0x01	; 1
    151e:	90 e0       	ldi	r25, 0x00	; 0
    1520:	02 2e       	mov	r0, r18
    1522:	02 c0       	rjmp	.+4      	; 0x1528 <SetPinMode+0x8e>
    1524:	88 0f       	add	r24, r24
    1526:	99 1f       	adc	r25, r25
    1528:	0a 94       	dec	r0
    152a:	e2 f7       	brpl	.-8      	; 0x1524 <SetPinMode+0x8a>
    152c:	84 2b       	or	r24, r20
    152e:	8c 93       	st	X, r24
    1530:	b3 c0       	rjmp	.+358    	; 0x1698 <SetPinMode+0x1fe>
			case PORTB:	SET_BIT(DDRB_REG,PinId);break;
    1532:	a7 e3       	ldi	r26, 0x37	; 55
    1534:	b0 e0       	ldi	r27, 0x00	; 0
    1536:	e7 e3       	ldi	r30, 0x37	; 55
    1538:	f0 e0       	ldi	r31, 0x00	; 0
    153a:	80 81       	ld	r24, Z
    153c:	48 2f       	mov	r20, r24
    153e:	89 81       	ldd	r24, Y+1	; 0x01
    1540:	28 2f       	mov	r18, r24
    1542:	30 e0       	ldi	r19, 0x00	; 0
    1544:	81 e0       	ldi	r24, 0x01	; 1
    1546:	90 e0       	ldi	r25, 0x00	; 0
    1548:	02 2e       	mov	r0, r18
    154a:	02 c0       	rjmp	.+4      	; 0x1550 <SetPinMode+0xb6>
    154c:	88 0f       	add	r24, r24
    154e:	99 1f       	adc	r25, r25
    1550:	0a 94       	dec	r0
    1552:	e2 f7       	brpl	.-8      	; 0x154c <SetPinMode+0xb2>
    1554:	84 2b       	or	r24, r20
    1556:	8c 93       	st	X, r24
    1558:	9f c0       	rjmp	.+318    	; 0x1698 <SetPinMode+0x1fe>
			case PORTC:	SET_BIT(DDRC_REG,PinId);break;
    155a:	a4 e3       	ldi	r26, 0x34	; 52
    155c:	b0 e0       	ldi	r27, 0x00	; 0
    155e:	e4 e3       	ldi	r30, 0x34	; 52
    1560:	f0 e0       	ldi	r31, 0x00	; 0
    1562:	80 81       	ld	r24, Z
    1564:	48 2f       	mov	r20, r24
    1566:	89 81       	ldd	r24, Y+1	; 0x01
    1568:	28 2f       	mov	r18, r24
    156a:	30 e0       	ldi	r19, 0x00	; 0
    156c:	81 e0       	ldi	r24, 0x01	; 1
    156e:	90 e0       	ldi	r25, 0x00	; 0
    1570:	02 2e       	mov	r0, r18
    1572:	02 c0       	rjmp	.+4      	; 0x1578 <SetPinMode+0xde>
    1574:	88 0f       	add	r24, r24
    1576:	99 1f       	adc	r25, r25
    1578:	0a 94       	dec	r0
    157a:	e2 f7       	brpl	.-8      	; 0x1574 <SetPinMode+0xda>
    157c:	84 2b       	or	r24, r20
    157e:	8c 93       	st	X, r24
    1580:	8b c0       	rjmp	.+278    	; 0x1698 <SetPinMode+0x1fe>
			case PORTD:	SET_BIT(DDRD_REG,PinId);break;
    1582:	a1 e3       	ldi	r26, 0x31	; 49
    1584:	b0 e0       	ldi	r27, 0x00	; 0
    1586:	e1 e3       	ldi	r30, 0x31	; 49
    1588:	f0 e0       	ldi	r31, 0x00	; 0
    158a:	80 81       	ld	r24, Z
    158c:	48 2f       	mov	r20, r24
    158e:	89 81       	ldd	r24, Y+1	; 0x01
    1590:	28 2f       	mov	r18, r24
    1592:	30 e0       	ldi	r19, 0x00	; 0
    1594:	81 e0       	ldi	r24, 0x01	; 1
    1596:	90 e0       	ldi	r25, 0x00	; 0
    1598:	02 2e       	mov	r0, r18
    159a:	02 c0       	rjmp	.+4      	; 0x15a0 <SetPinMode+0x106>
    159c:	88 0f       	add	r24, r24
    159e:	99 1f       	adc	r25, r25
    15a0:	0a 94       	dec	r0
    15a2:	e2 f7       	brpl	.-8      	; 0x159c <SetPinMode+0x102>
    15a4:	84 2b       	or	r24, r20
    15a6:	8c 93       	st	X, r24
    15a8:	77 c0       	rjmp	.+238    	; 0x1698 <SetPinMode+0x1fe>
			}
		}
		else if(PinMode == INPUT)
    15aa:	8b 81       	ldd	r24, Y+3	; 0x03
    15ac:	88 23       	and	r24, r24
    15ae:	09 f0       	breq	.+2      	; 0x15b2 <SetPinMode+0x118>
    15b0:	73 c0       	rjmp	.+230    	; 0x1698 <SetPinMode+0x1fe>
		{
			switch(PortId)
    15b2:	8a 81       	ldd	r24, Y+2	; 0x02
    15b4:	28 2f       	mov	r18, r24
    15b6:	30 e0       	ldi	r19, 0x00	; 0
    15b8:	3d 83       	std	Y+5, r19	; 0x05
    15ba:	2c 83       	std	Y+4, r18	; 0x04
    15bc:	8c 81       	ldd	r24, Y+4	; 0x04
    15be:	9d 81       	ldd	r25, Y+5	; 0x05
    15c0:	81 30       	cpi	r24, 0x01	; 1
    15c2:	91 05       	cpc	r25, r1
    15c4:	59 f1       	breq	.+86     	; 0x161c <SetPinMode+0x182>
    15c6:	2c 81       	ldd	r18, Y+4	; 0x04
    15c8:	3d 81       	ldd	r19, Y+5	; 0x05
    15ca:	22 30       	cpi	r18, 0x02	; 2
    15cc:	31 05       	cpc	r19, r1
    15ce:	2c f4       	brge	.+10     	; 0x15da <SetPinMode+0x140>
    15d0:	8c 81       	ldd	r24, Y+4	; 0x04
    15d2:	9d 81       	ldd	r25, Y+5	; 0x05
    15d4:	00 97       	sbiw	r24, 0x00	; 0
    15d6:	69 f0       	breq	.+26     	; 0x15f2 <SetPinMode+0x158>
    15d8:	5f c0       	rjmp	.+190    	; 0x1698 <SetPinMode+0x1fe>
    15da:	2c 81       	ldd	r18, Y+4	; 0x04
    15dc:	3d 81       	ldd	r19, Y+5	; 0x05
    15de:	22 30       	cpi	r18, 0x02	; 2
    15e0:	31 05       	cpc	r19, r1
    15e2:	89 f1       	breq	.+98     	; 0x1646 <SetPinMode+0x1ac>
    15e4:	8c 81       	ldd	r24, Y+4	; 0x04
    15e6:	9d 81       	ldd	r25, Y+5	; 0x05
    15e8:	83 30       	cpi	r24, 0x03	; 3
    15ea:	91 05       	cpc	r25, r1
    15ec:	09 f4       	brne	.+2      	; 0x15f0 <SetPinMode+0x156>
    15ee:	40 c0       	rjmp	.+128    	; 0x1670 <SetPinMode+0x1d6>
    15f0:	53 c0       	rjmp	.+166    	; 0x1698 <SetPinMode+0x1fe>
			{
			case PORTA:	CLR_BIT(DDRA_REG,PinId);break;
    15f2:	aa e3       	ldi	r26, 0x3A	; 58
    15f4:	b0 e0       	ldi	r27, 0x00	; 0
    15f6:	ea e3       	ldi	r30, 0x3A	; 58
    15f8:	f0 e0       	ldi	r31, 0x00	; 0
    15fa:	80 81       	ld	r24, Z
    15fc:	48 2f       	mov	r20, r24
    15fe:	89 81       	ldd	r24, Y+1	; 0x01
    1600:	28 2f       	mov	r18, r24
    1602:	30 e0       	ldi	r19, 0x00	; 0
    1604:	81 e0       	ldi	r24, 0x01	; 1
    1606:	90 e0       	ldi	r25, 0x00	; 0
    1608:	02 2e       	mov	r0, r18
    160a:	02 c0       	rjmp	.+4      	; 0x1610 <SetPinMode+0x176>
    160c:	88 0f       	add	r24, r24
    160e:	99 1f       	adc	r25, r25
    1610:	0a 94       	dec	r0
    1612:	e2 f7       	brpl	.-8      	; 0x160c <SetPinMode+0x172>
    1614:	80 95       	com	r24
    1616:	84 23       	and	r24, r20
    1618:	8c 93       	st	X, r24
    161a:	3e c0       	rjmp	.+124    	; 0x1698 <SetPinMode+0x1fe>
			case PORTB:	CLR_BIT(DDRB_REG,PinId);break;
    161c:	a7 e3       	ldi	r26, 0x37	; 55
    161e:	b0 e0       	ldi	r27, 0x00	; 0
    1620:	e7 e3       	ldi	r30, 0x37	; 55
    1622:	f0 e0       	ldi	r31, 0x00	; 0
    1624:	80 81       	ld	r24, Z
    1626:	48 2f       	mov	r20, r24
    1628:	89 81       	ldd	r24, Y+1	; 0x01
    162a:	28 2f       	mov	r18, r24
    162c:	30 e0       	ldi	r19, 0x00	; 0
    162e:	81 e0       	ldi	r24, 0x01	; 1
    1630:	90 e0       	ldi	r25, 0x00	; 0
    1632:	02 2e       	mov	r0, r18
    1634:	02 c0       	rjmp	.+4      	; 0x163a <SetPinMode+0x1a0>
    1636:	88 0f       	add	r24, r24
    1638:	99 1f       	adc	r25, r25
    163a:	0a 94       	dec	r0
    163c:	e2 f7       	brpl	.-8      	; 0x1636 <SetPinMode+0x19c>
    163e:	80 95       	com	r24
    1640:	84 23       	and	r24, r20
    1642:	8c 93       	st	X, r24
    1644:	29 c0       	rjmp	.+82     	; 0x1698 <SetPinMode+0x1fe>
			case PORTC:	CLR_BIT(DDRC_REG,PinId);break;
    1646:	a4 e3       	ldi	r26, 0x34	; 52
    1648:	b0 e0       	ldi	r27, 0x00	; 0
    164a:	e4 e3       	ldi	r30, 0x34	; 52
    164c:	f0 e0       	ldi	r31, 0x00	; 0
    164e:	80 81       	ld	r24, Z
    1650:	48 2f       	mov	r20, r24
    1652:	89 81       	ldd	r24, Y+1	; 0x01
    1654:	28 2f       	mov	r18, r24
    1656:	30 e0       	ldi	r19, 0x00	; 0
    1658:	81 e0       	ldi	r24, 0x01	; 1
    165a:	90 e0       	ldi	r25, 0x00	; 0
    165c:	02 2e       	mov	r0, r18
    165e:	02 c0       	rjmp	.+4      	; 0x1664 <SetPinMode+0x1ca>
    1660:	88 0f       	add	r24, r24
    1662:	99 1f       	adc	r25, r25
    1664:	0a 94       	dec	r0
    1666:	e2 f7       	brpl	.-8      	; 0x1660 <SetPinMode+0x1c6>
    1668:	80 95       	com	r24
    166a:	84 23       	and	r24, r20
    166c:	8c 93       	st	X, r24
    166e:	14 c0       	rjmp	.+40     	; 0x1698 <SetPinMode+0x1fe>
			case PORTD:	CLR_BIT(DDRD_REG,PinId);break;
    1670:	a1 e3       	ldi	r26, 0x31	; 49
    1672:	b0 e0       	ldi	r27, 0x00	; 0
    1674:	e1 e3       	ldi	r30, 0x31	; 49
    1676:	f0 e0       	ldi	r31, 0x00	; 0
    1678:	80 81       	ld	r24, Z
    167a:	48 2f       	mov	r20, r24
    167c:	89 81       	ldd	r24, Y+1	; 0x01
    167e:	28 2f       	mov	r18, r24
    1680:	30 e0       	ldi	r19, 0x00	; 0
    1682:	81 e0       	ldi	r24, 0x01	; 1
    1684:	90 e0       	ldi	r25, 0x00	; 0
    1686:	02 2e       	mov	r0, r18
    1688:	02 c0       	rjmp	.+4      	; 0x168e <SetPinMode+0x1f4>
    168a:	88 0f       	add	r24, r24
    168c:	99 1f       	adc	r25, r25
    168e:	0a 94       	dec	r0
    1690:	e2 f7       	brpl	.-8      	; 0x168a <SetPinMode+0x1f0>
    1692:	80 95       	com	r24
    1694:	84 23       	and	r24, r20
    1696:	8c 93       	st	X, r24
	}
		else
		{
			//report error massage
		}
}
    1698:	27 96       	adiw	r28, 0x07	; 7
    169a:	0f b6       	in	r0, 0x3f	; 63
    169c:	f8 94       	cli
    169e:	de bf       	out	0x3e, r29	; 62
    16a0:	0f be       	out	0x3f, r0	; 63
    16a2:	cd bf       	out	0x3d, r28	; 61
    16a4:	cf 91       	pop	r28
    16a6:	df 91       	pop	r29
    16a8:	08 95       	ret

000016aa <SetPortValue>:


void SetPortValue(u8 PortId,u8 PortValue)
{
    16aa:	df 93       	push	r29
    16ac:	cf 93       	push	r28
    16ae:	00 d0       	rcall	.+0      	; 0x16b0 <SetPortValue+0x6>
    16b0:	00 d0       	rcall	.+0      	; 0x16b2 <SetPortValue+0x8>
    16b2:	00 d0       	rcall	.+0      	; 0x16b4 <SetPortValue+0xa>
    16b4:	cd b7       	in	r28, 0x3d	; 61
    16b6:	de b7       	in	r29, 0x3e	; 62
    16b8:	89 83       	std	Y+1, r24	; 0x01
    16ba:	6a 83       	std	Y+2, r22	; 0x02
	if(PortId <= PORTD)
    16bc:	89 81       	ldd	r24, Y+1	; 0x01
    16be:	84 30       	cpi	r24, 0x04	; 4
    16c0:	08 f0       	brcs	.+2      	; 0x16c4 <SetPortValue+0x1a>
    16c2:	67 c0       	rjmp	.+206    	; 0x1792 <SetPortValue+0xe8>
	{
		if(PortValue == HIGH)
    16c4:	8a 81       	ldd	r24, Y+2	; 0x02
    16c6:	81 30       	cpi	r24, 0x01	; 1
    16c8:	99 f5       	brne	.+102    	; 0x1730 <SetPortValue+0x86>
		{
			switch(PortId)
    16ca:	89 81       	ldd	r24, Y+1	; 0x01
    16cc:	28 2f       	mov	r18, r24
    16ce:	30 e0       	ldi	r19, 0x00	; 0
    16d0:	3e 83       	std	Y+6, r19	; 0x06
    16d2:	2d 83       	std	Y+5, r18	; 0x05
    16d4:	8d 81       	ldd	r24, Y+5	; 0x05
    16d6:	9e 81       	ldd	r25, Y+6	; 0x06
    16d8:	81 30       	cpi	r24, 0x01	; 1
    16da:	91 05       	cpc	r25, r1
    16dc:	d1 f0       	breq	.+52     	; 0x1712 <SetPortValue+0x68>
    16de:	2d 81       	ldd	r18, Y+5	; 0x05
    16e0:	3e 81       	ldd	r19, Y+6	; 0x06
    16e2:	22 30       	cpi	r18, 0x02	; 2
    16e4:	31 05       	cpc	r19, r1
    16e6:	2c f4       	brge	.+10     	; 0x16f2 <SetPortValue+0x48>
    16e8:	8d 81       	ldd	r24, Y+5	; 0x05
    16ea:	9e 81       	ldd	r25, Y+6	; 0x06
    16ec:	00 97       	sbiw	r24, 0x00	; 0
    16ee:	61 f0       	breq	.+24     	; 0x1708 <SetPortValue+0x5e>
    16f0:	50 c0       	rjmp	.+160    	; 0x1792 <SetPortValue+0xe8>
    16f2:	2d 81       	ldd	r18, Y+5	; 0x05
    16f4:	3e 81       	ldd	r19, Y+6	; 0x06
    16f6:	22 30       	cpi	r18, 0x02	; 2
    16f8:	31 05       	cpc	r19, r1
    16fa:	81 f0       	breq	.+32     	; 0x171c <SetPortValue+0x72>
    16fc:	8d 81       	ldd	r24, Y+5	; 0x05
    16fe:	9e 81       	ldd	r25, Y+6	; 0x06
    1700:	83 30       	cpi	r24, 0x03	; 3
    1702:	91 05       	cpc	r25, r1
    1704:	81 f0       	breq	.+32     	; 0x1726 <SetPortValue+0x7c>
    1706:	45 c0       	rjmp	.+138    	; 0x1792 <SetPortValue+0xe8>
			{
			case PORTA:	SET_REG(PORTA_REG);break;
    1708:	eb e3       	ldi	r30, 0x3B	; 59
    170a:	f0 e0       	ldi	r31, 0x00	; 0
    170c:	8f ef       	ldi	r24, 0xFF	; 255
    170e:	80 83       	st	Z, r24
    1710:	40 c0       	rjmp	.+128    	; 0x1792 <SetPortValue+0xe8>
			case PORTB:	SET_REG(PORTB_REG);break;
    1712:	e8 e3       	ldi	r30, 0x38	; 56
    1714:	f0 e0       	ldi	r31, 0x00	; 0
    1716:	8f ef       	ldi	r24, 0xFF	; 255
    1718:	80 83       	st	Z, r24
    171a:	3b c0       	rjmp	.+118    	; 0x1792 <SetPortValue+0xe8>
			case PORTC:	SET_REG(PORTC_REG);break;
    171c:	e5 e3       	ldi	r30, 0x35	; 53
    171e:	f0 e0       	ldi	r31, 0x00	; 0
    1720:	8f ef       	ldi	r24, 0xFF	; 255
    1722:	80 83       	st	Z, r24
    1724:	36 c0       	rjmp	.+108    	; 0x1792 <SetPortValue+0xe8>
			case PORTD: SET_REG(PORTD_REG);break;
    1726:	e2 e3       	ldi	r30, 0x32	; 50
    1728:	f0 e0       	ldi	r31, 0x00	; 0
    172a:	8f ef       	ldi	r24, 0xFF	; 255
    172c:	80 83       	st	Z, r24
    172e:	31 c0       	rjmp	.+98     	; 0x1792 <SetPortValue+0xe8>
			}
		}
		else if(PortValue == LOW)
    1730:	8a 81       	ldd	r24, Y+2	; 0x02
    1732:	88 23       	and	r24, r24
    1734:	71 f5       	brne	.+92     	; 0x1792 <SetPortValue+0xe8>
		{
			switch(PortId)
    1736:	89 81       	ldd	r24, Y+1	; 0x01
    1738:	28 2f       	mov	r18, r24
    173a:	30 e0       	ldi	r19, 0x00	; 0
    173c:	3c 83       	std	Y+4, r19	; 0x04
    173e:	2b 83       	std	Y+3, r18	; 0x03
    1740:	8b 81       	ldd	r24, Y+3	; 0x03
    1742:	9c 81       	ldd	r25, Y+4	; 0x04
    1744:	81 30       	cpi	r24, 0x01	; 1
    1746:	91 05       	cpc	r25, r1
    1748:	c9 f0       	breq	.+50     	; 0x177c <SetPortValue+0xd2>
    174a:	2b 81       	ldd	r18, Y+3	; 0x03
    174c:	3c 81       	ldd	r19, Y+4	; 0x04
    174e:	22 30       	cpi	r18, 0x02	; 2
    1750:	31 05       	cpc	r19, r1
    1752:	2c f4       	brge	.+10     	; 0x175e <SetPortValue+0xb4>
    1754:	8b 81       	ldd	r24, Y+3	; 0x03
    1756:	9c 81       	ldd	r25, Y+4	; 0x04
    1758:	00 97       	sbiw	r24, 0x00	; 0
    175a:	61 f0       	breq	.+24     	; 0x1774 <SetPortValue+0xca>
    175c:	1a c0       	rjmp	.+52     	; 0x1792 <SetPortValue+0xe8>
    175e:	2b 81       	ldd	r18, Y+3	; 0x03
    1760:	3c 81       	ldd	r19, Y+4	; 0x04
    1762:	22 30       	cpi	r18, 0x02	; 2
    1764:	31 05       	cpc	r19, r1
    1766:	71 f0       	breq	.+28     	; 0x1784 <SetPortValue+0xda>
    1768:	8b 81       	ldd	r24, Y+3	; 0x03
    176a:	9c 81       	ldd	r25, Y+4	; 0x04
    176c:	83 30       	cpi	r24, 0x03	; 3
    176e:	91 05       	cpc	r25, r1
    1770:	69 f0       	breq	.+26     	; 0x178c <SetPortValue+0xe2>
    1772:	0f c0       	rjmp	.+30     	; 0x1792 <SetPortValue+0xe8>
			{
			case PORTA:	CLR_REG(PORTA_REG);break;
    1774:	eb e3       	ldi	r30, 0x3B	; 59
    1776:	f0 e0       	ldi	r31, 0x00	; 0
    1778:	10 82       	st	Z, r1
    177a:	0b c0       	rjmp	.+22     	; 0x1792 <SetPortValue+0xe8>
			case PORTB:	CLR_REG(PORTB_REG);break;
    177c:	e8 e3       	ldi	r30, 0x38	; 56
    177e:	f0 e0       	ldi	r31, 0x00	; 0
    1780:	10 82       	st	Z, r1
    1782:	07 c0       	rjmp	.+14     	; 0x1792 <SetPortValue+0xe8>
			case PORTC:	CLR_REG(PORTC_REG);break;
    1784:	e5 e3       	ldi	r30, 0x35	; 53
    1786:	f0 e0       	ldi	r31, 0x00	; 0
    1788:	10 82       	st	Z, r1
    178a:	03 c0       	rjmp	.+6      	; 0x1792 <SetPortValue+0xe8>
			case PORTD: CLR_REG(PORTD_REG);break;
    178c:	e2 e3       	ldi	r30, 0x32	; 50
    178e:	f0 e0       	ldi	r31, 0x00	; 0
    1790:	10 82       	st	Z, r1
	}
	else
	{
		//report error massage
	}
}
    1792:	26 96       	adiw	r28, 0x06	; 6
    1794:	0f b6       	in	r0, 0x3f	; 63
    1796:	f8 94       	cli
    1798:	de bf       	out	0x3e, r29	; 62
    179a:	0f be       	out	0x3f, r0	; 63
    179c:	cd bf       	out	0x3d, r28	; 61
    179e:	cf 91       	pop	r28
    17a0:	df 91       	pop	r29
    17a2:	08 95       	ret

000017a4 <SetPortMode>:

void SetPortMode(u8 PortId,u8 PortMode)
{
    17a4:	df 93       	push	r29
    17a6:	cf 93       	push	r28
    17a8:	00 d0       	rcall	.+0      	; 0x17aa <SetPortMode+0x6>
    17aa:	00 d0       	rcall	.+0      	; 0x17ac <SetPortMode+0x8>
    17ac:	00 d0       	rcall	.+0      	; 0x17ae <SetPortMode+0xa>
    17ae:	cd b7       	in	r28, 0x3d	; 61
    17b0:	de b7       	in	r29, 0x3e	; 62
    17b2:	89 83       	std	Y+1, r24	; 0x01
    17b4:	6a 83       	std	Y+2, r22	; 0x02
	if(PortId <= PORTD)
    17b6:	89 81       	ldd	r24, Y+1	; 0x01
    17b8:	84 30       	cpi	r24, 0x04	; 4
    17ba:	08 f0       	brcs	.+2      	; 0x17be <SetPortMode+0x1a>
    17bc:	67 c0       	rjmp	.+206    	; 0x188c <SetPortMode+0xe8>
	{
		if(PortMode == OUTPUT)
    17be:	8a 81       	ldd	r24, Y+2	; 0x02
    17c0:	81 30       	cpi	r24, 0x01	; 1
    17c2:	99 f5       	brne	.+102    	; 0x182a <SetPortMode+0x86>
		{
			switch(PortId)
    17c4:	89 81       	ldd	r24, Y+1	; 0x01
    17c6:	28 2f       	mov	r18, r24
    17c8:	30 e0       	ldi	r19, 0x00	; 0
    17ca:	3e 83       	std	Y+6, r19	; 0x06
    17cc:	2d 83       	std	Y+5, r18	; 0x05
    17ce:	8d 81       	ldd	r24, Y+5	; 0x05
    17d0:	9e 81       	ldd	r25, Y+6	; 0x06
    17d2:	81 30       	cpi	r24, 0x01	; 1
    17d4:	91 05       	cpc	r25, r1
    17d6:	d1 f0       	breq	.+52     	; 0x180c <SetPortMode+0x68>
    17d8:	2d 81       	ldd	r18, Y+5	; 0x05
    17da:	3e 81       	ldd	r19, Y+6	; 0x06
    17dc:	22 30       	cpi	r18, 0x02	; 2
    17de:	31 05       	cpc	r19, r1
    17e0:	2c f4       	brge	.+10     	; 0x17ec <SetPortMode+0x48>
    17e2:	8d 81       	ldd	r24, Y+5	; 0x05
    17e4:	9e 81       	ldd	r25, Y+6	; 0x06
    17e6:	00 97       	sbiw	r24, 0x00	; 0
    17e8:	61 f0       	breq	.+24     	; 0x1802 <SetPortMode+0x5e>
    17ea:	50 c0       	rjmp	.+160    	; 0x188c <SetPortMode+0xe8>
    17ec:	2d 81       	ldd	r18, Y+5	; 0x05
    17ee:	3e 81       	ldd	r19, Y+6	; 0x06
    17f0:	22 30       	cpi	r18, 0x02	; 2
    17f2:	31 05       	cpc	r19, r1
    17f4:	81 f0       	breq	.+32     	; 0x1816 <SetPortMode+0x72>
    17f6:	8d 81       	ldd	r24, Y+5	; 0x05
    17f8:	9e 81       	ldd	r25, Y+6	; 0x06
    17fa:	83 30       	cpi	r24, 0x03	; 3
    17fc:	91 05       	cpc	r25, r1
    17fe:	81 f0       	breq	.+32     	; 0x1820 <SetPortMode+0x7c>
    1800:	45 c0       	rjmp	.+138    	; 0x188c <SetPortMode+0xe8>
			{
			case PORTA:	SET_REG(DDRA_REG);break;
    1802:	ea e3       	ldi	r30, 0x3A	; 58
    1804:	f0 e0       	ldi	r31, 0x00	; 0
    1806:	8f ef       	ldi	r24, 0xFF	; 255
    1808:	80 83       	st	Z, r24
    180a:	40 c0       	rjmp	.+128    	; 0x188c <SetPortMode+0xe8>
			case PORTB:	SET_REG(DDRB_REG);break;
    180c:	e7 e3       	ldi	r30, 0x37	; 55
    180e:	f0 e0       	ldi	r31, 0x00	; 0
    1810:	8f ef       	ldi	r24, 0xFF	; 255
    1812:	80 83       	st	Z, r24
    1814:	3b c0       	rjmp	.+118    	; 0x188c <SetPortMode+0xe8>
			case PORTC:	SET_REG(DDRC_REG);break;
    1816:	e4 e3       	ldi	r30, 0x34	; 52
    1818:	f0 e0       	ldi	r31, 0x00	; 0
    181a:	8f ef       	ldi	r24, 0xFF	; 255
    181c:	80 83       	st	Z, r24
    181e:	36 c0       	rjmp	.+108    	; 0x188c <SetPortMode+0xe8>
			case PORTD: SET_REG(DDRD_REG);break;
    1820:	e1 e3       	ldi	r30, 0x31	; 49
    1822:	f0 e0       	ldi	r31, 0x00	; 0
    1824:	8f ef       	ldi	r24, 0xFF	; 255
    1826:	80 83       	st	Z, r24
    1828:	31 c0       	rjmp	.+98     	; 0x188c <SetPortMode+0xe8>
			}
		}
		else if(PortMode == INPUT)
    182a:	8a 81       	ldd	r24, Y+2	; 0x02
    182c:	88 23       	and	r24, r24
    182e:	71 f5       	brne	.+92     	; 0x188c <SetPortMode+0xe8>
		{
			switch(PortId)
    1830:	89 81       	ldd	r24, Y+1	; 0x01
    1832:	28 2f       	mov	r18, r24
    1834:	30 e0       	ldi	r19, 0x00	; 0
    1836:	3c 83       	std	Y+4, r19	; 0x04
    1838:	2b 83       	std	Y+3, r18	; 0x03
    183a:	8b 81       	ldd	r24, Y+3	; 0x03
    183c:	9c 81       	ldd	r25, Y+4	; 0x04
    183e:	81 30       	cpi	r24, 0x01	; 1
    1840:	91 05       	cpc	r25, r1
    1842:	c9 f0       	breq	.+50     	; 0x1876 <SetPortMode+0xd2>
    1844:	2b 81       	ldd	r18, Y+3	; 0x03
    1846:	3c 81       	ldd	r19, Y+4	; 0x04
    1848:	22 30       	cpi	r18, 0x02	; 2
    184a:	31 05       	cpc	r19, r1
    184c:	2c f4       	brge	.+10     	; 0x1858 <SetPortMode+0xb4>
    184e:	8b 81       	ldd	r24, Y+3	; 0x03
    1850:	9c 81       	ldd	r25, Y+4	; 0x04
    1852:	00 97       	sbiw	r24, 0x00	; 0
    1854:	61 f0       	breq	.+24     	; 0x186e <SetPortMode+0xca>
    1856:	1a c0       	rjmp	.+52     	; 0x188c <SetPortMode+0xe8>
    1858:	2b 81       	ldd	r18, Y+3	; 0x03
    185a:	3c 81       	ldd	r19, Y+4	; 0x04
    185c:	22 30       	cpi	r18, 0x02	; 2
    185e:	31 05       	cpc	r19, r1
    1860:	71 f0       	breq	.+28     	; 0x187e <SetPortMode+0xda>
    1862:	8b 81       	ldd	r24, Y+3	; 0x03
    1864:	9c 81       	ldd	r25, Y+4	; 0x04
    1866:	83 30       	cpi	r24, 0x03	; 3
    1868:	91 05       	cpc	r25, r1
    186a:	69 f0       	breq	.+26     	; 0x1886 <SetPortMode+0xe2>
    186c:	0f c0       	rjmp	.+30     	; 0x188c <SetPortMode+0xe8>
			{
			case PORTA:	CLR_REG(DDRA_REG);break;
    186e:	ea e3       	ldi	r30, 0x3A	; 58
    1870:	f0 e0       	ldi	r31, 0x00	; 0
    1872:	10 82       	st	Z, r1
    1874:	0b c0       	rjmp	.+22     	; 0x188c <SetPortMode+0xe8>
			case PORTB:	CLR_REG(DDRB_REG);break;
    1876:	e7 e3       	ldi	r30, 0x37	; 55
    1878:	f0 e0       	ldi	r31, 0x00	; 0
    187a:	10 82       	st	Z, r1
    187c:	07 c0       	rjmp	.+14     	; 0x188c <SetPortMode+0xe8>
			case PORTC:	CLR_REG(DDRC_REG);break;
    187e:	e4 e3       	ldi	r30, 0x34	; 52
    1880:	f0 e0       	ldi	r31, 0x00	; 0
    1882:	10 82       	st	Z, r1
    1884:	03 c0       	rjmp	.+6      	; 0x188c <SetPortMode+0xe8>
			case PORTD: CLR_REG(DDRD_REG);break;
    1886:	e1 e3       	ldi	r30, 0x31	; 49
    1888:	f0 e0       	ldi	r31, 0x00	; 0
    188a:	10 82       	st	Z, r1
	}
	else
	{
		//report error massage
	}
}
    188c:	26 96       	adiw	r28, 0x06	; 6
    188e:	0f b6       	in	r0, 0x3f	; 63
    1890:	f8 94       	cli
    1892:	de bf       	out	0x3e, r29	; 62
    1894:	0f be       	out	0x3f, r0	; 63
    1896:	cd bf       	out	0x3d, r28	; 61
    1898:	cf 91       	pop	r28
    189a:	df 91       	pop	r29
    189c:	08 95       	ret

0000189e <GetPinValue>:

u8 GetPinValue(u8 PinId,u8 PortId)
{
    189e:	df 93       	push	r29
    18a0:	cf 93       	push	r28
    18a2:	00 d0       	rcall	.+0      	; 0x18a4 <GetPinValue+0x6>
    18a4:	00 d0       	rcall	.+0      	; 0x18a6 <GetPinValue+0x8>
    18a6:	0f 92       	push	r0
    18a8:	cd b7       	in	r28, 0x3d	; 61
    18aa:	de b7       	in	r29, 0x3e	; 62
    18ac:	8a 83       	std	Y+2, r24	; 0x02
    18ae:	6b 83       	std	Y+3, r22	; 0x03
	u8 value;
	if(PinId <= PIN7 && PortId <= PORTD)
    18b0:	8a 81       	ldd	r24, Y+2	; 0x02
    18b2:	88 30       	cpi	r24, 0x08	; 8
    18b4:	08 f0       	brcs	.+2      	; 0x18b8 <GetPinValue+0x1a>
    18b6:	6b c0       	rjmp	.+214    	; 0x198e <GetPinValue+0xf0>
    18b8:	8b 81       	ldd	r24, Y+3	; 0x03
    18ba:	84 30       	cpi	r24, 0x04	; 4
    18bc:	08 f0       	brcs	.+2      	; 0x18c0 <GetPinValue+0x22>
    18be:	67 c0       	rjmp	.+206    	; 0x198e <GetPinValue+0xf0>
	{
		switch(PortId)
    18c0:	8b 81       	ldd	r24, Y+3	; 0x03
    18c2:	28 2f       	mov	r18, r24
    18c4:	30 e0       	ldi	r19, 0x00	; 0
    18c6:	3d 83       	std	Y+5, r19	; 0x05
    18c8:	2c 83       	std	Y+4, r18	; 0x04
    18ca:	4c 81       	ldd	r20, Y+4	; 0x04
    18cc:	5d 81       	ldd	r21, Y+5	; 0x05
    18ce:	41 30       	cpi	r20, 0x01	; 1
    18d0:	51 05       	cpc	r21, r1
    18d2:	41 f1       	breq	.+80     	; 0x1924 <GetPinValue+0x86>
    18d4:	8c 81       	ldd	r24, Y+4	; 0x04
    18d6:	9d 81       	ldd	r25, Y+5	; 0x05
    18d8:	82 30       	cpi	r24, 0x02	; 2
    18da:	91 05       	cpc	r25, r1
    18dc:	34 f4       	brge	.+12     	; 0x18ea <GetPinValue+0x4c>
    18de:	2c 81       	ldd	r18, Y+4	; 0x04
    18e0:	3d 81       	ldd	r19, Y+5	; 0x05
    18e2:	21 15       	cp	r18, r1
    18e4:	31 05       	cpc	r19, r1
    18e6:	61 f0       	breq	.+24     	; 0x1900 <GetPinValue+0x62>
    18e8:	52 c0       	rjmp	.+164    	; 0x198e <GetPinValue+0xf0>
    18ea:	4c 81       	ldd	r20, Y+4	; 0x04
    18ec:	5d 81       	ldd	r21, Y+5	; 0x05
    18ee:	42 30       	cpi	r20, 0x02	; 2
    18f0:	51 05       	cpc	r21, r1
    18f2:	51 f1       	breq	.+84     	; 0x1948 <GetPinValue+0xaa>
    18f4:	8c 81       	ldd	r24, Y+4	; 0x04
    18f6:	9d 81       	ldd	r25, Y+5	; 0x05
    18f8:	83 30       	cpi	r24, 0x03	; 3
    18fa:	91 05       	cpc	r25, r1
    18fc:	b9 f1       	breq	.+110    	; 0x196c <GetPinValue+0xce>
    18fe:	47 c0       	rjmp	.+142    	; 0x198e <GetPinValue+0xf0>
		{
		case PORTA:	value = GET_BIT(PINA_REG,PinId);break;
    1900:	e9 e3       	ldi	r30, 0x39	; 57
    1902:	f0 e0       	ldi	r31, 0x00	; 0
    1904:	80 81       	ld	r24, Z
    1906:	28 2f       	mov	r18, r24
    1908:	30 e0       	ldi	r19, 0x00	; 0
    190a:	8a 81       	ldd	r24, Y+2	; 0x02
    190c:	88 2f       	mov	r24, r24
    190e:	90 e0       	ldi	r25, 0x00	; 0
    1910:	a9 01       	movw	r20, r18
    1912:	02 c0       	rjmp	.+4      	; 0x1918 <GetPinValue+0x7a>
    1914:	55 95       	asr	r21
    1916:	47 95       	ror	r20
    1918:	8a 95       	dec	r24
    191a:	e2 f7       	brpl	.-8      	; 0x1914 <GetPinValue+0x76>
    191c:	ca 01       	movw	r24, r20
    191e:	81 70       	andi	r24, 0x01	; 1
    1920:	89 83       	std	Y+1, r24	; 0x01
    1922:	35 c0       	rjmp	.+106    	; 0x198e <GetPinValue+0xf0>
		case PORTB:	value = GET_BIT(PINB_REG,PinId);break;
    1924:	e6 e3       	ldi	r30, 0x36	; 54
    1926:	f0 e0       	ldi	r31, 0x00	; 0
    1928:	80 81       	ld	r24, Z
    192a:	28 2f       	mov	r18, r24
    192c:	30 e0       	ldi	r19, 0x00	; 0
    192e:	8a 81       	ldd	r24, Y+2	; 0x02
    1930:	88 2f       	mov	r24, r24
    1932:	90 e0       	ldi	r25, 0x00	; 0
    1934:	a9 01       	movw	r20, r18
    1936:	02 c0       	rjmp	.+4      	; 0x193c <GetPinValue+0x9e>
    1938:	55 95       	asr	r21
    193a:	47 95       	ror	r20
    193c:	8a 95       	dec	r24
    193e:	e2 f7       	brpl	.-8      	; 0x1938 <GetPinValue+0x9a>
    1940:	ca 01       	movw	r24, r20
    1942:	81 70       	andi	r24, 0x01	; 1
    1944:	89 83       	std	Y+1, r24	; 0x01
    1946:	23 c0       	rjmp	.+70     	; 0x198e <GetPinValue+0xf0>
		case PORTC: value = GET_BIT(PINC_REG,PinId);break;
    1948:	e3 e3       	ldi	r30, 0x33	; 51
    194a:	f0 e0       	ldi	r31, 0x00	; 0
    194c:	80 81       	ld	r24, Z
    194e:	28 2f       	mov	r18, r24
    1950:	30 e0       	ldi	r19, 0x00	; 0
    1952:	8a 81       	ldd	r24, Y+2	; 0x02
    1954:	88 2f       	mov	r24, r24
    1956:	90 e0       	ldi	r25, 0x00	; 0
    1958:	a9 01       	movw	r20, r18
    195a:	02 c0       	rjmp	.+4      	; 0x1960 <GetPinValue+0xc2>
    195c:	55 95       	asr	r21
    195e:	47 95       	ror	r20
    1960:	8a 95       	dec	r24
    1962:	e2 f7       	brpl	.-8      	; 0x195c <GetPinValue+0xbe>
    1964:	ca 01       	movw	r24, r20
    1966:	81 70       	andi	r24, 0x01	; 1
    1968:	89 83       	std	Y+1, r24	; 0x01
    196a:	11 c0       	rjmp	.+34     	; 0x198e <GetPinValue+0xf0>
		case PORTD: value = GET_BIT(PIND_REG,PinId);break;
    196c:	e0 e3       	ldi	r30, 0x30	; 48
    196e:	f0 e0       	ldi	r31, 0x00	; 0
    1970:	80 81       	ld	r24, Z
    1972:	28 2f       	mov	r18, r24
    1974:	30 e0       	ldi	r19, 0x00	; 0
    1976:	8a 81       	ldd	r24, Y+2	; 0x02
    1978:	88 2f       	mov	r24, r24
    197a:	90 e0       	ldi	r25, 0x00	; 0
    197c:	a9 01       	movw	r20, r18
    197e:	02 c0       	rjmp	.+4      	; 0x1984 <GetPinValue+0xe6>
    1980:	55 95       	asr	r21
    1982:	47 95       	ror	r20
    1984:	8a 95       	dec	r24
    1986:	e2 f7       	brpl	.-8      	; 0x1980 <GetPinValue+0xe2>
    1988:	ca 01       	movw	r24, r20
    198a:	81 70       	andi	r24, 0x01	; 1
    198c:	89 83       	std	Y+1, r24	; 0x01
	}
	else
	{
		//report error massage
	}
	return value;
    198e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1990:	0f 90       	pop	r0
    1992:	0f 90       	pop	r0
    1994:	0f 90       	pop	r0
    1996:	0f 90       	pop	r0
    1998:	0f 90       	pop	r0
    199a:	cf 91       	pop	r28
    199c:	df 91       	pop	r29
    199e:	08 95       	ret

000019a0 <main>:
#include"LIB/Types.h"
#include"7Segment.h"
#include"avr/delay.h"

void main(void)
{
    19a0:	df 93       	push	r29
    19a2:	cf 93       	push	r28
    19a4:	cd b7       	in	r28, 0x3d	; 61
    19a6:	de b7       	in	r29, 0x3e	; 62
	Seven_Segment_Init();
    19a8:	0e 94 63 06 	call	0xcc6	; 0xcc6 <Seven_Segment_Init>
	while(1)
	{
		Count_Down(0,9,100);
    19ac:	80 e0       	ldi	r24, 0x00	; 0
    19ae:	69 e0       	ldi	r22, 0x09	; 9
    19b0:	44 e6       	ldi	r20, 0x64	; 100
    19b2:	0e 94 dd 07 	call	0xfba	; 0xfba <Count_Down>
		Count_Up(0,9,100);
    19b6:	80 e0       	ldi	r24, 0x00	; 0
    19b8:	69 e0       	ldi	r22, 0x09	; 9
    19ba:	44 e6       	ldi	r20, 0x64	; 100
    19bc:	0e 94 91 08 	call	0x1122	; 0x1122 <Count_Up>
    19c0:	f5 cf       	rjmp	.-22     	; 0x19ac <main+0xc>

000019c2 <__prologue_saves__>:
    19c2:	2f 92       	push	r2
    19c4:	3f 92       	push	r3
    19c6:	4f 92       	push	r4
    19c8:	5f 92       	push	r5
    19ca:	6f 92       	push	r6
    19cc:	7f 92       	push	r7
    19ce:	8f 92       	push	r8
    19d0:	9f 92       	push	r9
    19d2:	af 92       	push	r10
    19d4:	bf 92       	push	r11
    19d6:	cf 92       	push	r12
    19d8:	df 92       	push	r13
    19da:	ef 92       	push	r14
    19dc:	ff 92       	push	r15
    19de:	0f 93       	push	r16
    19e0:	1f 93       	push	r17
    19e2:	cf 93       	push	r28
    19e4:	df 93       	push	r29
    19e6:	cd b7       	in	r28, 0x3d	; 61
    19e8:	de b7       	in	r29, 0x3e	; 62
    19ea:	ca 1b       	sub	r28, r26
    19ec:	db 0b       	sbc	r29, r27
    19ee:	0f b6       	in	r0, 0x3f	; 63
    19f0:	f8 94       	cli
    19f2:	de bf       	out	0x3e, r29	; 62
    19f4:	0f be       	out	0x3f, r0	; 63
    19f6:	cd bf       	out	0x3d, r28	; 61
    19f8:	09 94       	ijmp

000019fa <__epilogue_restores__>:
    19fa:	2a 88       	ldd	r2, Y+18	; 0x12
    19fc:	39 88       	ldd	r3, Y+17	; 0x11
    19fe:	48 88       	ldd	r4, Y+16	; 0x10
    1a00:	5f 84       	ldd	r5, Y+15	; 0x0f
    1a02:	6e 84       	ldd	r6, Y+14	; 0x0e
    1a04:	7d 84       	ldd	r7, Y+13	; 0x0d
    1a06:	8c 84       	ldd	r8, Y+12	; 0x0c
    1a08:	9b 84       	ldd	r9, Y+11	; 0x0b
    1a0a:	aa 84       	ldd	r10, Y+10	; 0x0a
    1a0c:	b9 84       	ldd	r11, Y+9	; 0x09
    1a0e:	c8 84       	ldd	r12, Y+8	; 0x08
    1a10:	df 80       	ldd	r13, Y+7	; 0x07
    1a12:	ee 80       	ldd	r14, Y+6	; 0x06
    1a14:	fd 80       	ldd	r15, Y+5	; 0x05
    1a16:	0c 81       	ldd	r16, Y+4	; 0x04
    1a18:	1b 81       	ldd	r17, Y+3	; 0x03
    1a1a:	aa 81       	ldd	r26, Y+2	; 0x02
    1a1c:	b9 81       	ldd	r27, Y+1	; 0x01
    1a1e:	ce 0f       	add	r28, r30
    1a20:	d1 1d       	adc	r29, r1
    1a22:	0f b6       	in	r0, 0x3f	; 63
    1a24:	f8 94       	cli
    1a26:	de bf       	out	0x3e, r29	; 62
    1a28:	0f be       	out	0x3f, r0	; 63
    1a2a:	cd bf       	out	0x3d, r28	; 61
    1a2c:	ed 01       	movw	r28, r26
    1a2e:	08 95       	ret

00001a30 <_exit>:
    1a30:	f8 94       	cli

00001a32 <__stop_program>:
    1a32:	ff cf       	rjmp	.-2      	; 0x1a32 <__stop_program>
